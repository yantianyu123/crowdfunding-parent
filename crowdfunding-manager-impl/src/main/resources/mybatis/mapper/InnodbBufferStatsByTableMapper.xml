<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.InnodbBufferStatsByTableMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.InnodbBufferStatsByTable" >
    <result column="pages" property="pages" jdbcType="BIGINT" />
    <result column="pages_hashed" property="pagesHashed" jdbcType="BIGINT" />
    <result column="pages_old" property="pagesOld" jdbcType="BIGINT" />
    <result column="rows_cached" property="rowsCached" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.InnodbBufferStatsByTableWithBLOBs" extends="BaseResultMap" >
    <result column="object_schema" property="objectSchema" jdbcType="LONGVARCHAR" />
    <result column="object_name" property="objectName" jdbcType="LONGVARCHAR" />
    <result column="allocated" property="allocated" jdbcType="LONGVARCHAR" />
    <result column="data" property="data" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pages, pages_hashed, pages_old, rows_cached
  </sql>
  <sql id="Blob_Column_List" >
    object_schema, object_name, allocated, data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.InnodbBufferStatsByTableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from innodb_buffer_stats_by_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.InnodbBufferStatsByTableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from innodb_buffer_stats_by_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.InnodbBufferStatsByTableExample" >
    delete from innodb_buffer_stats_by_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.InnodbBufferStatsByTableWithBLOBs" >
    insert into innodb_buffer_stats_by_table (pages, pages_hashed, pages_old, 
      rows_cached, object_schema, object_name, 
      allocated, data)
    values (#{pages,jdbcType=BIGINT}, #{pagesHashed,jdbcType=BIGINT}, #{pagesOld,jdbcType=BIGINT}, 
      #{rowsCached,jdbcType=DECIMAL}, #{objectSchema,jdbcType=LONGVARCHAR}, #{objectName,jdbcType=LONGVARCHAR}, 
      #{allocated,jdbcType=LONGVARCHAR}, #{data,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.InnodbBufferStatsByTableWithBLOBs" >
    insert into innodb_buffer_stats_by_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pages != null" >
        pages,
      </if>
      <if test="pagesHashed != null" >
        pages_hashed,
      </if>
      <if test="pagesOld != null" >
        pages_old,
      </if>
      <if test="rowsCached != null" >
        rows_cached,
      </if>
      <if test="objectSchema != null" >
        object_schema,
      </if>
      <if test="objectName != null" >
        object_name,
      </if>
      <if test="allocated != null" >
        allocated,
      </if>
      <if test="data != null" >
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pages != null" >
        #{pages,jdbcType=BIGINT},
      </if>
      <if test="pagesHashed != null" >
        #{pagesHashed,jdbcType=BIGINT},
      </if>
      <if test="pagesOld != null" >
        #{pagesOld,jdbcType=BIGINT},
      </if>
      <if test="rowsCached != null" >
        #{rowsCached,jdbcType=DECIMAL},
      </if>
      <if test="objectSchema != null" >
        #{objectSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="objectName != null" >
        #{objectName,jdbcType=LONGVARCHAR},
      </if>
      <if test="allocated != null" >
        #{allocated,jdbcType=LONGVARCHAR},
      </if>
      <if test="data != null" >
        #{data,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.InnodbBufferStatsByTableExample" resultType="java.lang.Integer" >
    select count(*) from innodb_buffer_stats_by_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update innodb_buffer_stats_by_table
    <set >
      <if test="record.pages != null" >
        pages = #{record.pages,jdbcType=BIGINT},
      </if>
      <if test="record.pagesHashed != null" >
        pages_hashed = #{record.pagesHashed,jdbcType=BIGINT},
      </if>
      <if test="record.pagesOld != null" >
        pages_old = #{record.pagesOld,jdbcType=BIGINT},
      </if>
      <if test="record.rowsCached != null" >
        rows_cached = #{record.rowsCached,jdbcType=DECIMAL},
      </if>
      <if test="record.objectSchema != null" >
        object_schema = #{record.objectSchema,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.objectName != null" >
        object_name = #{record.objectName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.allocated != null" >
        allocated = #{record.allocated,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.data != null" >
        data = #{record.data,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update innodb_buffer_stats_by_table
    set pages = #{record.pages,jdbcType=BIGINT},
      pages_hashed = #{record.pagesHashed,jdbcType=BIGINT},
      pages_old = #{record.pagesOld,jdbcType=BIGINT},
      rows_cached = #{record.rowsCached,jdbcType=DECIMAL},
      object_schema = #{record.objectSchema,jdbcType=LONGVARCHAR},
      object_name = #{record.objectName,jdbcType=LONGVARCHAR},
      allocated = #{record.allocated,jdbcType=LONGVARCHAR},
      data = #{record.data,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update innodb_buffer_stats_by_table
    set pages = #{record.pages,jdbcType=BIGINT},
      pages_hashed = #{record.pagesHashed,jdbcType=BIGINT},
      pages_old = #{record.pagesOld,jdbcType=BIGINT},
      rows_cached = #{record.rowsCached,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>