<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.DbMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.Db" >
    <result column="Host" property="host" jdbcType="CHAR" />
    <result column="Db" property="db" jdbcType="CHAR" />
    <result column="User" property="user" jdbcType="CHAR" />
    <result column="Select_priv" property="selectPriv" jdbcType="CHAR" />
    <result column="Insert_priv" property="insertPriv" jdbcType="CHAR" />
    <result column="Update_priv" property="updatePriv" jdbcType="CHAR" />
    <result column="Delete_priv" property="deletePriv" jdbcType="CHAR" />
    <result column="Create_priv" property="createPriv" jdbcType="CHAR" />
    <result column="Drop_priv" property="dropPriv" jdbcType="CHAR" />
    <result column="Grant_priv" property="grantPriv" jdbcType="CHAR" />
    <result column="References_priv" property="referencesPriv" jdbcType="CHAR" />
    <result column="Index_priv" property="indexPriv" jdbcType="CHAR" />
    <result column="Alter_priv" property="alterPriv" jdbcType="CHAR" />
    <result column="Create_tmp_table_priv" property="createTmpTablePriv" jdbcType="CHAR" />
    <result column="Lock_tables_priv" property="lockTablesPriv" jdbcType="CHAR" />
    <result column="Create_view_priv" property="createViewPriv" jdbcType="CHAR" />
    <result column="Show_view_priv" property="showViewPriv" jdbcType="CHAR" />
    <result column="Create_routine_priv" property="createRoutinePriv" jdbcType="CHAR" />
    <result column="Alter_routine_priv" property="alterRoutinePriv" jdbcType="CHAR" />
    <result column="Execute_priv" property="executePriv" jdbcType="CHAR" />
    <result column="Event_priv" property="eventPriv" jdbcType="CHAR" />
    <result column="Trigger_priv" property="triggerPriv" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Host, Db, User, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, 
    Drop_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Create_tmp_table_priv, 
    Lock_tables_priv, Create_view_priv, Show_view_priv, Create_routine_priv, Alter_routine_priv, 
    Execute_priv, Event_priv, Trigger_priv
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.DbExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from db
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.DbExample" >
    delete from db
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.Db" >
    insert into db (Host, Db, User, Select_priv, 
      Insert_priv, Update_priv, Delete_priv, 
      Create_priv, Drop_priv, Grant_priv, 
      References_priv, Index_priv, Alter_priv, 
      Create_tmp_table_priv, Lock_tables_priv, Create_view_priv, 
      Show_view_priv, Create_routine_priv, Alter_routine_priv, 
      Execute_priv, Event_priv, Trigger_priv
      )
    values (#{host,jdbcType=CHAR}, #{db,jdbcType=CHAR}, #{user,jdbcType=CHAR}, #{selectPriv,jdbcType=CHAR}, 
      #{insertPriv,jdbcType=CHAR}, #{updatePriv,jdbcType=CHAR}, #{deletePriv,jdbcType=CHAR}, 
      #{createPriv,jdbcType=CHAR}, #{dropPriv,jdbcType=CHAR}, #{grantPriv,jdbcType=CHAR}, 
      #{referencesPriv,jdbcType=CHAR}, #{indexPriv,jdbcType=CHAR}, #{alterPriv,jdbcType=CHAR}, 
      #{createTmpTablePriv,jdbcType=CHAR}, #{lockTablesPriv,jdbcType=CHAR}, #{createViewPriv,jdbcType=CHAR}, 
      #{showViewPriv,jdbcType=CHAR}, #{createRoutinePriv,jdbcType=CHAR}, #{alterRoutinePriv,jdbcType=CHAR}, 
      #{executePriv,jdbcType=CHAR}, #{eventPriv,jdbcType=CHAR}, #{triggerPriv,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.Db" >
    insert into db
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        Host,
      </if>
      <if test="db != null" >
        Db,
      </if>
      <if test="user != null" >
        User,
      </if>
      <if test="selectPriv != null" >
        Select_priv,
      </if>
      <if test="insertPriv != null" >
        Insert_priv,
      </if>
      <if test="updatePriv != null" >
        Update_priv,
      </if>
      <if test="deletePriv != null" >
        Delete_priv,
      </if>
      <if test="createPriv != null" >
        Create_priv,
      </if>
      <if test="dropPriv != null" >
        Drop_priv,
      </if>
      <if test="grantPriv != null" >
        Grant_priv,
      </if>
      <if test="referencesPriv != null" >
        References_priv,
      </if>
      <if test="indexPriv != null" >
        Index_priv,
      </if>
      <if test="alterPriv != null" >
        Alter_priv,
      </if>
      <if test="createTmpTablePriv != null" >
        Create_tmp_table_priv,
      </if>
      <if test="lockTablesPriv != null" >
        Lock_tables_priv,
      </if>
      <if test="createViewPriv != null" >
        Create_view_priv,
      </if>
      <if test="showViewPriv != null" >
        Show_view_priv,
      </if>
      <if test="createRoutinePriv != null" >
        Create_routine_priv,
      </if>
      <if test="alterRoutinePriv != null" >
        Alter_routine_priv,
      </if>
      <if test="executePriv != null" >
        Execute_priv,
      </if>
      <if test="eventPriv != null" >
        Event_priv,
      </if>
      <if test="triggerPriv != null" >
        Trigger_priv,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        #{host,jdbcType=CHAR},
      </if>
      <if test="db != null" >
        #{db,jdbcType=CHAR},
      </if>
      <if test="user != null" >
        #{user,jdbcType=CHAR},
      </if>
      <if test="selectPriv != null" >
        #{selectPriv,jdbcType=CHAR},
      </if>
      <if test="insertPriv != null" >
        #{insertPriv,jdbcType=CHAR},
      </if>
      <if test="updatePriv != null" >
        #{updatePriv,jdbcType=CHAR},
      </if>
      <if test="deletePriv != null" >
        #{deletePriv,jdbcType=CHAR},
      </if>
      <if test="createPriv != null" >
        #{createPriv,jdbcType=CHAR},
      </if>
      <if test="dropPriv != null" >
        #{dropPriv,jdbcType=CHAR},
      </if>
      <if test="grantPriv != null" >
        #{grantPriv,jdbcType=CHAR},
      </if>
      <if test="referencesPriv != null" >
        #{referencesPriv,jdbcType=CHAR},
      </if>
      <if test="indexPriv != null" >
        #{indexPriv,jdbcType=CHAR},
      </if>
      <if test="alterPriv != null" >
        #{alterPriv,jdbcType=CHAR},
      </if>
      <if test="createTmpTablePriv != null" >
        #{createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="lockTablesPriv != null" >
        #{lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="createViewPriv != null" >
        #{createViewPriv,jdbcType=CHAR},
      </if>
      <if test="showViewPriv != null" >
        #{showViewPriv,jdbcType=CHAR},
      </if>
      <if test="createRoutinePriv != null" >
        #{createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="alterRoutinePriv != null" >
        #{alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="executePriv != null" >
        #{executePriv,jdbcType=CHAR},
      </if>
      <if test="eventPriv != null" >
        #{eventPriv,jdbcType=CHAR},
      </if>
      <if test="triggerPriv != null" >
        #{triggerPriv,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.DbExample" resultType="java.lang.Integer" >
    select count(*) from db
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update db
    <set >
      <if test="record.host != null" >
        Host = #{record.host,jdbcType=CHAR},
      </if>
      <if test="record.db != null" >
        Db = #{record.db,jdbcType=CHAR},
      </if>
      <if test="record.user != null" >
        User = #{record.user,jdbcType=CHAR},
      </if>
      <if test="record.selectPriv != null" >
        Select_priv = #{record.selectPriv,jdbcType=CHAR},
      </if>
      <if test="record.insertPriv != null" >
        Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      </if>
      <if test="record.updatePriv != null" >
        Update_priv = #{record.updatePriv,jdbcType=CHAR},
      </if>
      <if test="record.deletePriv != null" >
        Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      </if>
      <if test="record.createPriv != null" >
        Create_priv = #{record.createPriv,jdbcType=CHAR},
      </if>
      <if test="record.dropPriv != null" >
        Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      </if>
      <if test="record.grantPriv != null" >
        Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      </if>
      <if test="record.referencesPriv != null" >
        References_priv = #{record.referencesPriv,jdbcType=CHAR},
      </if>
      <if test="record.indexPriv != null" >
        Index_priv = #{record.indexPriv,jdbcType=CHAR},
      </if>
      <if test="record.alterPriv != null" >
        Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      </if>
      <if test="record.createTmpTablePriv != null" >
        Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      </if>
      <if test="record.lockTablesPriv != null" >
        Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      </if>
      <if test="record.createViewPriv != null" >
        Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      </if>
      <if test="record.showViewPriv != null" >
        Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      </if>
      <if test="record.createRoutinePriv != null" >
        Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="record.alterRoutinePriv != null" >
        Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      </if>
      <if test="record.executePriv != null" >
        Execute_priv = #{record.executePriv,jdbcType=CHAR},
      </if>
      <if test="record.eventPriv != null" >
        Event_priv = #{record.eventPriv,jdbcType=CHAR},
      </if>
      <if test="record.triggerPriv != null" >
        Trigger_priv = #{record.triggerPriv,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update db
    set Host = #{record.host,jdbcType=CHAR},
      Db = #{record.db,jdbcType=CHAR},
      User = #{record.user,jdbcType=CHAR},
      Select_priv = #{record.selectPriv,jdbcType=CHAR},
      Insert_priv = #{record.insertPriv,jdbcType=CHAR},
      Update_priv = #{record.updatePriv,jdbcType=CHAR},
      Delete_priv = #{record.deletePriv,jdbcType=CHAR},
      Create_priv = #{record.createPriv,jdbcType=CHAR},
      Drop_priv = #{record.dropPriv,jdbcType=CHAR},
      Grant_priv = #{record.grantPriv,jdbcType=CHAR},
      References_priv = #{record.referencesPriv,jdbcType=CHAR},
      Index_priv = #{record.indexPriv,jdbcType=CHAR},
      Alter_priv = #{record.alterPriv,jdbcType=CHAR},
      Create_tmp_table_priv = #{record.createTmpTablePriv,jdbcType=CHAR},
      Lock_tables_priv = #{record.lockTablesPriv,jdbcType=CHAR},
      Create_view_priv = #{record.createViewPriv,jdbcType=CHAR},
      Show_view_priv = #{record.showViewPriv,jdbcType=CHAR},
      Create_routine_priv = #{record.createRoutinePriv,jdbcType=CHAR},
      Alter_routine_priv = #{record.alterRoutinePriv,jdbcType=CHAR},
      Execute_priv = #{record.executePriv,jdbcType=CHAR},
      Event_priv = #{record.eventPriv,jdbcType=CHAR},
      Trigger_priv = #{record.triggerPriv,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>