<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.ReplicationConnectionStatusMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.ReplicationConnectionStatus" >
    <result column="CHANNEL_NAME" property="channelName" jdbcType="CHAR" />
    <result column="GROUP_NAME" property="groupName" jdbcType="CHAR" />
    <result column="SOURCE_UUID" property="sourceUuid" jdbcType="CHAR" />
    <result column="THREAD_ID" property="threadId" jdbcType="BIGINT" />
    <result column="SERVICE_STATE" property="serviceState" jdbcType="CHAR" />
    <result column="COUNT_RECEIVED_HEARTBEATS" property="countReceivedHeartbeats" jdbcType="BIGINT" />
    <result column="LAST_HEARTBEAT_TIMESTAMP" property="lastHeartbeatTimestamp" jdbcType="TIMESTAMP" />
    <result column="LAST_ERROR_NUMBER" property="lastErrorNumber" jdbcType="INTEGER" />
    <result column="LAST_ERROR_MESSAGE" property="lastErrorMessage" jdbcType="VARCHAR" />
    <result column="LAST_ERROR_TIMESTAMP" property="lastErrorTimestamp" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.ReplicationConnectionStatus" extends="BaseResultMap" >
    <result column="RECEIVED_TRANSACTION_SET" property="receivedTransactionSet" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CHANNEL_NAME, GROUP_NAME, SOURCE_UUID, THREAD_ID, SERVICE_STATE, COUNT_RECEIVED_HEARTBEATS, 
    LAST_HEARTBEAT_TIMESTAMP, LAST_ERROR_NUMBER, LAST_ERROR_MESSAGE, LAST_ERROR_TIMESTAMP
  </sql>
  <sql id="Blob_Column_List" >
    RECEIVED_TRANSACTION_SET
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.ReplicationConnectionStatusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from replication_connection_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.ReplicationConnectionStatusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from replication_connection_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.ReplicationConnectionStatusExample" >
    delete from replication_connection_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.ReplicationConnectionStatus" >
    insert into replication_connection_status (CHANNEL_NAME, GROUP_NAME, SOURCE_UUID, 
      THREAD_ID, SERVICE_STATE, COUNT_RECEIVED_HEARTBEATS, 
      LAST_HEARTBEAT_TIMESTAMP, LAST_ERROR_NUMBER, 
      LAST_ERROR_MESSAGE, LAST_ERROR_TIMESTAMP, 
      RECEIVED_TRANSACTION_SET)
    values (#{channelName,jdbcType=CHAR}, #{groupName,jdbcType=CHAR}, #{sourceUuid,jdbcType=CHAR}, 
      #{threadId,jdbcType=BIGINT}, #{serviceState,jdbcType=CHAR}, #{countReceivedHeartbeats,jdbcType=BIGINT}, 
      #{lastHeartbeatTimestamp,jdbcType=TIMESTAMP}, #{lastErrorNumber,jdbcType=INTEGER}, 
      #{lastErrorMessage,jdbcType=VARCHAR}, #{lastErrorTimestamp,jdbcType=TIMESTAMP}, 
      #{receivedTransactionSet,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.ReplicationConnectionStatus" >
    insert into replication_connection_status
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="channelName != null" >
        CHANNEL_NAME,
      </if>
      <if test="groupName != null" >
        GROUP_NAME,
      </if>
      <if test="sourceUuid != null" >
        SOURCE_UUID,
      </if>
      <if test="threadId != null" >
        THREAD_ID,
      </if>
      <if test="serviceState != null" >
        SERVICE_STATE,
      </if>
      <if test="countReceivedHeartbeats != null" >
        COUNT_RECEIVED_HEARTBEATS,
      </if>
      <if test="lastHeartbeatTimestamp != null" >
        LAST_HEARTBEAT_TIMESTAMP,
      </if>
      <if test="lastErrorNumber != null" >
        LAST_ERROR_NUMBER,
      </if>
      <if test="lastErrorMessage != null" >
        LAST_ERROR_MESSAGE,
      </if>
      <if test="lastErrorTimestamp != null" >
        LAST_ERROR_TIMESTAMP,
      </if>
      <if test="receivedTransactionSet != null" >
        RECEIVED_TRANSACTION_SET,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="channelName != null" >
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=CHAR},
      </if>
      <if test="sourceUuid != null" >
        #{sourceUuid,jdbcType=CHAR},
      </if>
      <if test="threadId != null" >
        #{threadId,jdbcType=BIGINT},
      </if>
      <if test="serviceState != null" >
        #{serviceState,jdbcType=CHAR},
      </if>
      <if test="countReceivedHeartbeats != null" >
        #{countReceivedHeartbeats,jdbcType=BIGINT},
      </if>
      <if test="lastHeartbeatTimestamp != null" >
        #{lastHeartbeatTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="lastErrorNumber != null" >
        #{lastErrorNumber,jdbcType=INTEGER},
      </if>
      <if test="lastErrorMessage != null" >
        #{lastErrorMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastErrorTimestamp != null" >
        #{lastErrorTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="receivedTransactionSet != null" >
        #{receivedTransactionSet,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.ReplicationConnectionStatusExample" resultType="java.lang.Integer" >
    select count(*) from replication_connection_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update replication_connection_status
    <set >
      <if test="record.channelName != null" >
        CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.groupName != null" >
        GROUP_NAME = #{record.groupName,jdbcType=CHAR},
      </if>
      <if test="record.sourceUuid != null" >
        SOURCE_UUID = #{record.sourceUuid,jdbcType=CHAR},
      </if>
      <if test="record.threadId != null" >
        THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      </if>
      <if test="record.serviceState != null" >
        SERVICE_STATE = #{record.serviceState,jdbcType=CHAR},
      </if>
      <if test="record.countReceivedHeartbeats != null" >
        COUNT_RECEIVED_HEARTBEATS = #{record.countReceivedHeartbeats,jdbcType=BIGINT},
      </if>
      <if test="record.lastHeartbeatTimestamp != null" >
        LAST_HEARTBEAT_TIMESTAMP = #{record.lastHeartbeatTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastErrorNumber != null" >
        LAST_ERROR_NUMBER = #{record.lastErrorNumber,jdbcType=INTEGER},
      </if>
      <if test="record.lastErrorMessage != null" >
        LAST_ERROR_MESSAGE = #{record.lastErrorMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.lastErrorTimestamp != null" >
        LAST_ERROR_TIMESTAMP = #{record.lastErrorTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receivedTransactionSet != null" >
        RECEIVED_TRANSACTION_SET = #{record.receivedTransactionSet,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update replication_connection_status
    set CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      GROUP_NAME = #{record.groupName,jdbcType=CHAR},
      SOURCE_UUID = #{record.sourceUuid,jdbcType=CHAR},
      THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      SERVICE_STATE = #{record.serviceState,jdbcType=CHAR},
      COUNT_RECEIVED_HEARTBEATS = #{record.countReceivedHeartbeats,jdbcType=BIGINT},
      LAST_HEARTBEAT_TIMESTAMP = #{record.lastHeartbeatTimestamp,jdbcType=TIMESTAMP},
      LAST_ERROR_NUMBER = #{record.lastErrorNumber,jdbcType=INTEGER},
      LAST_ERROR_MESSAGE = #{record.lastErrorMessage,jdbcType=VARCHAR},
      LAST_ERROR_TIMESTAMP = #{record.lastErrorTimestamp,jdbcType=TIMESTAMP},
      RECEIVED_TRANSACTION_SET = #{record.receivedTransactionSet,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update replication_connection_status
    set CHANNEL_NAME = #{record.channelName,jdbcType=CHAR},
      GROUP_NAME = #{record.groupName,jdbcType=CHAR},
      SOURCE_UUID = #{record.sourceUuid,jdbcType=CHAR},
      THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      SERVICE_STATE = #{record.serviceState,jdbcType=CHAR},
      COUNT_RECEIVED_HEARTBEATS = #{record.countReceivedHeartbeats,jdbcType=BIGINT},
      LAST_HEARTBEAT_TIMESTAMP = #{record.lastHeartbeatTimestamp,jdbcType=TIMESTAMP},
      LAST_ERROR_NUMBER = #{record.lastErrorNumber,jdbcType=INTEGER},
      LAST_ERROR_MESSAGE = #{record.lastErrorMessage,jdbcType=VARCHAR},
      LAST_ERROR_TIMESTAMP = #{record.lastErrorTimestamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>