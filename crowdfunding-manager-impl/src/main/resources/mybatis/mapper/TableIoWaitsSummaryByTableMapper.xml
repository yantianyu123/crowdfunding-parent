<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.TableIoWaitsSummaryByTableMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.TableIoWaitsSummaryByTable" >
    <result column="OBJECT_TYPE" property="objectType" jdbcType="VARCHAR" />
    <result column="OBJECT_SCHEMA" property="objectSchema" jdbcType="VARCHAR" />
    <result column="OBJECT_NAME" property="objectName" jdbcType="VARCHAR" />
    <result column="COUNT_STAR" property="countStar" jdbcType="BIGINT" />
    <result column="SUM_TIMER_WAIT" property="sumTimerWait" jdbcType="BIGINT" />
    <result column="MIN_TIMER_WAIT" property="minTimerWait" jdbcType="BIGINT" />
    <result column="AVG_TIMER_WAIT" property="avgTimerWait" jdbcType="BIGINT" />
    <result column="MAX_TIMER_WAIT" property="maxTimerWait" jdbcType="BIGINT" />
    <result column="COUNT_READ" property="countRead" jdbcType="BIGINT" />
    <result column="SUM_TIMER_READ" property="sumTimerRead" jdbcType="BIGINT" />
    <result column="MIN_TIMER_READ" property="minTimerRead" jdbcType="BIGINT" />
    <result column="AVG_TIMER_READ" property="avgTimerRead" jdbcType="BIGINT" />
    <result column="MAX_TIMER_READ" property="maxTimerRead" jdbcType="BIGINT" />
    <result column="COUNT_WRITE" property="countWrite" jdbcType="BIGINT" />
    <result column="SUM_TIMER_WRITE" property="sumTimerWrite" jdbcType="BIGINT" />
    <result column="MIN_TIMER_WRITE" property="minTimerWrite" jdbcType="BIGINT" />
    <result column="AVG_TIMER_WRITE" property="avgTimerWrite" jdbcType="BIGINT" />
    <result column="MAX_TIMER_WRITE" property="maxTimerWrite" jdbcType="BIGINT" />
    <result column="COUNT_FETCH" property="countFetch" jdbcType="BIGINT" />
    <result column="SUM_TIMER_FETCH" property="sumTimerFetch" jdbcType="BIGINT" />
    <result column="MIN_TIMER_FETCH" property="minTimerFetch" jdbcType="BIGINT" />
    <result column="AVG_TIMER_FETCH" property="avgTimerFetch" jdbcType="BIGINT" />
    <result column="MAX_TIMER_FETCH" property="maxTimerFetch" jdbcType="BIGINT" />
    <result column="COUNT_INSERT" property="countInsert" jdbcType="BIGINT" />
    <result column="SUM_TIMER_INSERT" property="sumTimerInsert" jdbcType="BIGINT" />
    <result column="MIN_TIMER_INSERT" property="minTimerInsert" jdbcType="BIGINT" />
    <result column="AVG_TIMER_INSERT" property="avgTimerInsert" jdbcType="BIGINT" />
    <result column="MAX_TIMER_INSERT" property="maxTimerInsert" jdbcType="BIGINT" />
    <result column="COUNT_UPDATE" property="countUpdate" jdbcType="BIGINT" />
    <result column="SUM_TIMER_UPDATE" property="sumTimerUpdate" jdbcType="BIGINT" />
    <result column="MIN_TIMER_UPDATE" property="minTimerUpdate" jdbcType="BIGINT" />
    <result column="AVG_TIMER_UPDATE" property="avgTimerUpdate" jdbcType="BIGINT" />
    <result column="MAX_TIMER_UPDATE" property="maxTimerUpdate" jdbcType="BIGINT" />
    <result column="COUNT_DELETE" property="countDelete" jdbcType="BIGINT" />
    <result column="SUM_TIMER_DELETE" property="sumTimerDelete" jdbcType="BIGINT" />
    <result column="MIN_TIMER_DELETE" property="minTimerDelete" jdbcType="BIGINT" />
    <result column="AVG_TIMER_DELETE" property="avgTimerDelete" jdbcType="BIGINT" />
    <result column="MAX_TIMER_DELETE" property="maxTimerDelete" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, COUNT_STAR, SUM_TIMER_WAIT, MIN_TIMER_WAIT, 
    AVG_TIMER_WAIT, MAX_TIMER_WAIT, COUNT_READ, SUM_TIMER_READ, MIN_TIMER_READ, AVG_TIMER_READ, 
    MAX_TIMER_READ, COUNT_WRITE, SUM_TIMER_WRITE, MIN_TIMER_WRITE, AVG_TIMER_WRITE, MAX_TIMER_WRITE, 
    COUNT_FETCH, SUM_TIMER_FETCH, MIN_TIMER_FETCH, AVG_TIMER_FETCH, MAX_TIMER_FETCH, 
    COUNT_INSERT, SUM_TIMER_INSERT, MIN_TIMER_INSERT, AVG_TIMER_INSERT, MAX_TIMER_INSERT, 
    COUNT_UPDATE, SUM_TIMER_UPDATE, MIN_TIMER_UPDATE, AVG_TIMER_UPDATE, MAX_TIMER_UPDATE, 
    COUNT_DELETE, SUM_TIMER_DELETE, MIN_TIMER_DELETE, AVG_TIMER_DELETE, MAX_TIMER_DELETE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.TableIoWaitsSummaryByTableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from table_io_waits_summary_by_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.TableIoWaitsSummaryByTableExample" >
    delete from table_io_waits_summary_by_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.TableIoWaitsSummaryByTable" >
    insert into table_io_waits_summary_by_table (OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, 
      COUNT_STAR, SUM_TIMER_WAIT, MIN_TIMER_WAIT, 
      AVG_TIMER_WAIT, MAX_TIMER_WAIT, COUNT_READ, 
      SUM_TIMER_READ, MIN_TIMER_READ, AVG_TIMER_READ, 
      MAX_TIMER_READ, COUNT_WRITE, SUM_TIMER_WRITE, 
      MIN_TIMER_WRITE, AVG_TIMER_WRITE, MAX_TIMER_WRITE, 
      COUNT_FETCH, SUM_TIMER_FETCH, MIN_TIMER_FETCH, 
      AVG_TIMER_FETCH, MAX_TIMER_FETCH, COUNT_INSERT, 
      SUM_TIMER_INSERT, MIN_TIMER_INSERT, AVG_TIMER_INSERT, 
      MAX_TIMER_INSERT, COUNT_UPDATE, SUM_TIMER_UPDATE, 
      MIN_TIMER_UPDATE, AVG_TIMER_UPDATE, MAX_TIMER_UPDATE, 
      COUNT_DELETE, SUM_TIMER_DELETE, MIN_TIMER_DELETE, 
      AVG_TIMER_DELETE, MAX_TIMER_DELETE)
    values (#{objectType,jdbcType=VARCHAR}, #{objectSchema,jdbcType=VARCHAR}, #{objectName,jdbcType=VARCHAR}, 
      #{countStar,jdbcType=BIGINT}, #{sumTimerWait,jdbcType=BIGINT}, #{minTimerWait,jdbcType=BIGINT}, 
      #{avgTimerWait,jdbcType=BIGINT}, #{maxTimerWait,jdbcType=BIGINT}, #{countRead,jdbcType=BIGINT}, 
      #{sumTimerRead,jdbcType=BIGINT}, #{minTimerRead,jdbcType=BIGINT}, #{avgTimerRead,jdbcType=BIGINT}, 
      #{maxTimerRead,jdbcType=BIGINT}, #{countWrite,jdbcType=BIGINT}, #{sumTimerWrite,jdbcType=BIGINT}, 
      #{minTimerWrite,jdbcType=BIGINT}, #{avgTimerWrite,jdbcType=BIGINT}, #{maxTimerWrite,jdbcType=BIGINT}, 
      #{countFetch,jdbcType=BIGINT}, #{sumTimerFetch,jdbcType=BIGINT}, #{minTimerFetch,jdbcType=BIGINT}, 
      #{avgTimerFetch,jdbcType=BIGINT}, #{maxTimerFetch,jdbcType=BIGINT}, #{countInsert,jdbcType=BIGINT}, 
      #{sumTimerInsert,jdbcType=BIGINT}, #{minTimerInsert,jdbcType=BIGINT}, #{avgTimerInsert,jdbcType=BIGINT}, 
      #{maxTimerInsert,jdbcType=BIGINT}, #{countUpdate,jdbcType=BIGINT}, #{sumTimerUpdate,jdbcType=BIGINT}, 
      #{minTimerUpdate,jdbcType=BIGINT}, #{avgTimerUpdate,jdbcType=BIGINT}, #{maxTimerUpdate,jdbcType=BIGINT}, 
      #{countDelete,jdbcType=BIGINT}, #{sumTimerDelete,jdbcType=BIGINT}, #{minTimerDelete,jdbcType=BIGINT}, 
      #{avgTimerDelete,jdbcType=BIGINT}, #{maxTimerDelete,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.TableIoWaitsSummaryByTable" >
    insert into table_io_waits_summary_by_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="objectType != null" >
        OBJECT_TYPE,
      </if>
      <if test="objectSchema != null" >
        OBJECT_SCHEMA,
      </if>
      <if test="objectName != null" >
        OBJECT_NAME,
      </if>
      <if test="countStar != null" >
        COUNT_STAR,
      </if>
      <if test="sumTimerWait != null" >
        SUM_TIMER_WAIT,
      </if>
      <if test="minTimerWait != null" >
        MIN_TIMER_WAIT,
      </if>
      <if test="avgTimerWait != null" >
        AVG_TIMER_WAIT,
      </if>
      <if test="maxTimerWait != null" >
        MAX_TIMER_WAIT,
      </if>
      <if test="countRead != null" >
        COUNT_READ,
      </if>
      <if test="sumTimerRead != null" >
        SUM_TIMER_READ,
      </if>
      <if test="minTimerRead != null" >
        MIN_TIMER_READ,
      </if>
      <if test="avgTimerRead != null" >
        AVG_TIMER_READ,
      </if>
      <if test="maxTimerRead != null" >
        MAX_TIMER_READ,
      </if>
      <if test="countWrite != null" >
        COUNT_WRITE,
      </if>
      <if test="sumTimerWrite != null" >
        SUM_TIMER_WRITE,
      </if>
      <if test="minTimerWrite != null" >
        MIN_TIMER_WRITE,
      </if>
      <if test="avgTimerWrite != null" >
        AVG_TIMER_WRITE,
      </if>
      <if test="maxTimerWrite != null" >
        MAX_TIMER_WRITE,
      </if>
      <if test="countFetch != null" >
        COUNT_FETCH,
      </if>
      <if test="sumTimerFetch != null" >
        SUM_TIMER_FETCH,
      </if>
      <if test="minTimerFetch != null" >
        MIN_TIMER_FETCH,
      </if>
      <if test="avgTimerFetch != null" >
        AVG_TIMER_FETCH,
      </if>
      <if test="maxTimerFetch != null" >
        MAX_TIMER_FETCH,
      </if>
      <if test="countInsert != null" >
        COUNT_INSERT,
      </if>
      <if test="sumTimerInsert != null" >
        SUM_TIMER_INSERT,
      </if>
      <if test="minTimerInsert != null" >
        MIN_TIMER_INSERT,
      </if>
      <if test="avgTimerInsert != null" >
        AVG_TIMER_INSERT,
      </if>
      <if test="maxTimerInsert != null" >
        MAX_TIMER_INSERT,
      </if>
      <if test="countUpdate != null" >
        COUNT_UPDATE,
      </if>
      <if test="sumTimerUpdate != null" >
        SUM_TIMER_UPDATE,
      </if>
      <if test="minTimerUpdate != null" >
        MIN_TIMER_UPDATE,
      </if>
      <if test="avgTimerUpdate != null" >
        AVG_TIMER_UPDATE,
      </if>
      <if test="maxTimerUpdate != null" >
        MAX_TIMER_UPDATE,
      </if>
      <if test="countDelete != null" >
        COUNT_DELETE,
      </if>
      <if test="sumTimerDelete != null" >
        SUM_TIMER_DELETE,
      </if>
      <if test="minTimerDelete != null" >
        MIN_TIMER_DELETE,
      </if>
      <if test="avgTimerDelete != null" >
        AVG_TIMER_DELETE,
      </if>
      <if test="maxTimerDelete != null" >
        MAX_TIMER_DELETE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="objectType != null" >
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectSchema != null" >
        #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null" >
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="countStar != null" >
        #{countStar,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWait != null" >
        #{sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="minTimerWait != null" >
        #{minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWait != null" >
        #{avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWait != null" >
        #{maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="countRead != null" >
        #{countRead,jdbcType=BIGINT},
      </if>
      <if test="sumTimerRead != null" >
        #{sumTimerRead,jdbcType=BIGINT},
      </if>
      <if test="minTimerRead != null" >
        #{minTimerRead,jdbcType=BIGINT},
      </if>
      <if test="avgTimerRead != null" >
        #{avgTimerRead,jdbcType=BIGINT},
      </if>
      <if test="maxTimerRead != null" >
        #{maxTimerRead,jdbcType=BIGINT},
      </if>
      <if test="countWrite != null" >
        #{countWrite,jdbcType=BIGINT},
      </if>
      <if test="sumTimerWrite != null" >
        #{sumTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="minTimerWrite != null" >
        #{minTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="avgTimerWrite != null" >
        #{avgTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="maxTimerWrite != null" >
        #{maxTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="countFetch != null" >
        #{countFetch,jdbcType=BIGINT},
      </if>
      <if test="sumTimerFetch != null" >
        #{sumTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="minTimerFetch != null" >
        #{minTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="avgTimerFetch != null" >
        #{avgTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="maxTimerFetch != null" >
        #{maxTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="countInsert != null" >
        #{countInsert,jdbcType=BIGINT},
      </if>
      <if test="sumTimerInsert != null" >
        #{sumTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="minTimerInsert != null" >
        #{minTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="avgTimerInsert != null" >
        #{avgTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="maxTimerInsert != null" >
        #{maxTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="countUpdate != null" >
        #{countUpdate,jdbcType=BIGINT},
      </if>
      <if test="sumTimerUpdate != null" >
        #{sumTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="minTimerUpdate != null" >
        #{minTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="avgTimerUpdate != null" >
        #{avgTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="maxTimerUpdate != null" >
        #{maxTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="countDelete != null" >
        #{countDelete,jdbcType=BIGINT},
      </if>
      <if test="sumTimerDelete != null" >
        #{sumTimerDelete,jdbcType=BIGINT},
      </if>
      <if test="minTimerDelete != null" >
        #{minTimerDelete,jdbcType=BIGINT},
      </if>
      <if test="avgTimerDelete != null" >
        #{avgTimerDelete,jdbcType=BIGINT},
      </if>
      <if test="maxTimerDelete != null" >
        #{maxTimerDelete,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.TableIoWaitsSummaryByTableExample" resultType="java.lang.Integer" >
    select count(*) from table_io_waits_summary_by_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update table_io_waits_summary_by_table
    <set >
      <if test="record.objectType != null" >
        OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      </if>
      <if test="record.objectSchema != null" >
        OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.objectName != null" >
        OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      </if>
      <if test="record.countStar != null" >
        COUNT_STAR = #{record.countStar,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerWait != null" >
        SUM_TIMER_WAIT = #{record.sumTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerWait != null" >
        MIN_TIMER_WAIT = #{record.minTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerWait != null" >
        AVG_TIMER_WAIT = #{record.avgTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerWait != null" >
        MAX_TIMER_WAIT = #{record.maxTimerWait,jdbcType=BIGINT},
      </if>
      <if test="record.countRead != null" >
        COUNT_READ = #{record.countRead,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerRead != null" >
        SUM_TIMER_READ = #{record.sumTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerRead != null" >
        MIN_TIMER_READ = #{record.minTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerRead != null" >
        AVG_TIMER_READ = #{record.avgTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerRead != null" >
        MAX_TIMER_READ = #{record.maxTimerRead,jdbcType=BIGINT},
      </if>
      <if test="record.countWrite != null" >
        COUNT_WRITE = #{record.countWrite,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerWrite != null" >
        SUM_TIMER_WRITE = #{record.sumTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerWrite != null" >
        MIN_TIMER_WRITE = #{record.minTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerWrite != null" >
        AVG_TIMER_WRITE = #{record.avgTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerWrite != null" >
        MAX_TIMER_WRITE = #{record.maxTimerWrite,jdbcType=BIGINT},
      </if>
      <if test="record.countFetch != null" >
        COUNT_FETCH = #{record.countFetch,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerFetch != null" >
        SUM_TIMER_FETCH = #{record.sumTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerFetch != null" >
        MIN_TIMER_FETCH = #{record.minTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerFetch != null" >
        AVG_TIMER_FETCH = #{record.avgTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerFetch != null" >
        MAX_TIMER_FETCH = #{record.maxTimerFetch,jdbcType=BIGINT},
      </if>
      <if test="record.countInsert != null" >
        COUNT_INSERT = #{record.countInsert,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerInsert != null" >
        SUM_TIMER_INSERT = #{record.sumTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerInsert != null" >
        MIN_TIMER_INSERT = #{record.minTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerInsert != null" >
        AVG_TIMER_INSERT = #{record.avgTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerInsert != null" >
        MAX_TIMER_INSERT = #{record.maxTimerInsert,jdbcType=BIGINT},
      </if>
      <if test="record.countUpdate != null" >
        COUNT_UPDATE = #{record.countUpdate,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerUpdate != null" >
        SUM_TIMER_UPDATE = #{record.sumTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerUpdate != null" >
        MIN_TIMER_UPDATE = #{record.minTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerUpdate != null" >
        AVG_TIMER_UPDATE = #{record.avgTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerUpdate != null" >
        MAX_TIMER_UPDATE = #{record.maxTimerUpdate,jdbcType=BIGINT},
      </if>
      <if test="record.countDelete != null" >
        COUNT_DELETE = #{record.countDelete,jdbcType=BIGINT},
      </if>
      <if test="record.sumTimerDelete != null" >
        SUM_TIMER_DELETE = #{record.sumTimerDelete,jdbcType=BIGINT},
      </if>
      <if test="record.minTimerDelete != null" >
        MIN_TIMER_DELETE = #{record.minTimerDelete,jdbcType=BIGINT},
      </if>
      <if test="record.avgTimerDelete != null" >
        AVG_TIMER_DELETE = #{record.avgTimerDelete,jdbcType=BIGINT},
      </if>
      <if test="record.maxTimerDelete != null" >
        MAX_TIMER_DELETE = #{record.maxTimerDelete,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update table_io_waits_summary_by_table
    set OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      COUNT_STAR = #{record.countStar,jdbcType=BIGINT},
      SUM_TIMER_WAIT = #{record.sumTimerWait,jdbcType=BIGINT},
      MIN_TIMER_WAIT = #{record.minTimerWait,jdbcType=BIGINT},
      AVG_TIMER_WAIT = #{record.avgTimerWait,jdbcType=BIGINT},
      MAX_TIMER_WAIT = #{record.maxTimerWait,jdbcType=BIGINT},
      COUNT_READ = #{record.countRead,jdbcType=BIGINT},
      SUM_TIMER_READ = #{record.sumTimerRead,jdbcType=BIGINT},
      MIN_TIMER_READ = #{record.minTimerRead,jdbcType=BIGINT},
      AVG_TIMER_READ = #{record.avgTimerRead,jdbcType=BIGINT},
      MAX_TIMER_READ = #{record.maxTimerRead,jdbcType=BIGINT},
      COUNT_WRITE = #{record.countWrite,jdbcType=BIGINT},
      SUM_TIMER_WRITE = #{record.sumTimerWrite,jdbcType=BIGINT},
      MIN_TIMER_WRITE = #{record.minTimerWrite,jdbcType=BIGINT},
      AVG_TIMER_WRITE = #{record.avgTimerWrite,jdbcType=BIGINT},
      MAX_TIMER_WRITE = #{record.maxTimerWrite,jdbcType=BIGINT},
      COUNT_FETCH = #{record.countFetch,jdbcType=BIGINT},
      SUM_TIMER_FETCH = #{record.sumTimerFetch,jdbcType=BIGINT},
      MIN_TIMER_FETCH = #{record.minTimerFetch,jdbcType=BIGINT},
      AVG_TIMER_FETCH = #{record.avgTimerFetch,jdbcType=BIGINT},
      MAX_TIMER_FETCH = #{record.maxTimerFetch,jdbcType=BIGINT},
      COUNT_INSERT = #{record.countInsert,jdbcType=BIGINT},
      SUM_TIMER_INSERT = #{record.sumTimerInsert,jdbcType=BIGINT},
      MIN_TIMER_INSERT = #{record.minTimerInsert,jdbcType=BIGINT},
      AVG_TIMER_INSERT = #{record.avgTimerInsert,jdbcType=BIGINT},
      MAX_TIMER_INSERT = #{record.maxTimerInsert,jdbcType=BIGINT},
      COUNT_UPDATE = #{record.countUpdate,jdbcType=BIGINT},
      SUM_TIMER_UPDATE = #{record.sumTimerUpdate,jdbcType=BIGINT},
      MIN_TIMER_UPDATE = #{record.minTimerUpdate,jdbcType=BIGINT},
      AVG_TIMER_UPDATE = #{record.avgTimerUpdate,jdbcType=BIGINT},
      MAX_TIMER_UPDATE = #{record.maxTimerUpdate,jdbcType=BIGINT},
      COUNT_DELETE = #{record.countDelete,jdbcType=BIGINT},
      SUM_TIMER_DELETE = #{record.sumTimerDelete,jdbcType=BIGINT},
      MIN_TIMER_DELETE = #{record.minTimerDelete,jdbcType=BIGINT},
      AVG_TIMER_DELETE = #{record.avgTimerDelete,jdbcType=BIGINT},
      MAX_TIMER_DELETE = #{record.maxTimerDelete,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>