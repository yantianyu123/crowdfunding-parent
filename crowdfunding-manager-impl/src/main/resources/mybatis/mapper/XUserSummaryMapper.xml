<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.XUserSummaryMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.XUserSummary" >
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="statements" property="statements" jdbcType="DECIMAL" />
    <result column="statement_latency" property="statementLatency" jdbcType="DECIMAL" />
    <result column="statement_avg_latency" property="statementAvgLatency" jdbcType="DECIMAL" />
    <result column="table_scans" property="tableScans" jdbcType="DECIMAL" />
    <result column="file_ios" property="fileIos" jdbcType="DECIMAL" />
    <result column="file_io_latency" property="fileIoLatency" jdbcType="DECIMAL" />
    <result column="current_connections" property="currentConnections" jdbcType="DECIMAL" />
    <result column="total_connections" property="totalConnections" jdbcType="DECIMAL" />
    <result column="unique_hosts" property="uniqueHosts" jdbcType="BIGINT" />
    <result column="current_memory" property="currentMemory" jdbcType="DECIMAL" />
    <result column="total_memory_allocated" property="totalMemoryAllocated" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user, statements, statement_latency, statement_avg_latency, table_scans, file_ios, 
    file_io_latency, current_connections, total_connections, unique_hosts, current_memory, 
    total_memory_allocated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.XUserSummaryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from x$user_summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.XUserSummaryExample" >
    delete from x$user_summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.XUserSummary" >
    insert into x$user_summary (user, statements, statement_latency, 
      statement_avg_latency, table_scans, file_ios, 
      file_io_latency, current_connections, total_connections, 
      unique_hosts, current_memory, total_memory_allocated
      )
    values (#{user,jdbcType=VARCHAR}, #{statements,jdbcType=DECIMAL}, #{statementLatency,jdbcType=DECIMAL}, 
      #{statementAvgLatency,jdbcType=DECIMAL}, #{tableScans,jdbcType=DECIMAL}, #{fileIos,jdbcType=DECIMAL}, 
      #{fileIoLatency,jdbcType=DECIMAL}, #{currentConnections,jdbcType=DECIMAL}, #{totalConnections,jdbcType=DECIMAL}, 
      #{uniqueHosts,jdbcType=BIGINT}, #{currentMemory,jdbcType=DECIMAL}, #{totalMemoryAllocated,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.XUserSummary" >
    insert into x$user_summary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user != null" >
        user,
      </if>
      <if test="statements != null" >
        statements,
      </if>
      <if test="statementLatency != null" >
        statement_latency,
      </if>
      <if test="statementAvgLatency != null" >
        statement_avg_latency,
      </if>
      <if test="tableScans != null" >
        table_scans,
      </if>
      <if test="fileIos != null" >
        file_ios,
      </if>
      <if test="fileIoLatency != null" >
        file_io_latency,
      </if>
      <if test="currentConnections != null" >
        current_connections,
      </if>
      <if test="totalConnections != null" >
        total_connections,
      </if>
      <if test="uniqueHosts != null" >
        unique_hosts,
      </if>
      <if test="currentMemory != null" >
        current_memory,
      </if>
      <if test="totalMemoryAllocated != null" >
        total_memory_allocated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="statements != null" >
        #{statements,jdbcType=DECIMAL},
      </if>
      <if test="statementLatency != null" >
        #{statementLatency,jdbcType=DECIMAL},
      </if>
      <if test="statementAvgLatency != null" >
        #{statementAvgLatency,jdbcType=DECIMAL},
      </if>
      <if test="tableScans != null" >
        #{tableScans,jdbcType=DECIMAL},
      </if>
      <if test="fileIos != null" >
        #{fileIos,jdbcType=DECIMAL},
      </if>
      <if test="fileIoLatency != null" >
        #{fileIoLatency,jdbcType=DECIMAL},
      </if>
      <if test="currentConnections != null" >
        #{currentConnections,jdbcType=DECIMAL},
      </if>
      <if test="totalConnections != null" >
        #{totalConnections,jdbcType=DECIMAL},
      </if>
      <if test="uniqueHosts != null" >
        #{uniqueHosts,jdbcType=BIGINT},
      </if>
      <if test="currentMemory != null" >
        #{currentMemory,jdbcType=DECIMAL},
      </if>
      <if test="totalMemoryAllocated != null" >
        #{totalMemoryAllocated,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.XUserSummaryExample" resultType="java.lang.Integer" >
    select count(*) from x$user_summary
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update x$user_summary
    <set >
      <if test="record.user != null" >
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.statements != null" >
        statements = #{record.statements,jdbcType=DECIMAL},
      </if>
      <if test="record.statementLatency != null" >
        statement_latency = #{record.statementLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.statementAvgLatency != null" >
        statement_avg_latency = #{record.statementAvgLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.tableScans != null" >
        table_scans = #{record.tableScans,jdbcType=DECIMAL},
      </if>
      <if test="record.fileIos != null" >
        file_ios = #{record.fileIos,jdbcType=DECIMAL},
      </if>
      <if test="record.fileIoLatency != null" >
        file_io_latency = #{record.fileIoLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.currentConnections != null" >
        current_connections = #{record.currentConnections,jdbcType=DECIMAL},
      </if>
      <if test="record.totalConnections != null" >
        total_connections = #{record.totalConnections,jdbcType=DECIMAL},
      </if>
      <if test="record.uniqueHosts != null" >
        unique_hosts = #{record.uniqueHosts,jdbcType=BIGINT},
      </if>
      <if test="record.currentMemory != null" >
        current_memory = #{record.currentMemory,jdbcType=DECIMAL},
      </if>
      <if test="record.totalMemoryAllocated != null" >
        total_memory_allocated = #{record.totalMemoryAllocated,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update x$user_summary
    set user = #{record.user,jdbcType=VARCHAR},
      statements = #{record.statements,jdbcType=DECIMAL},
      statement_latency = #{record.statementLatency,jdbcType=DECIMAL},
      statement_avg_latency = #{record.statementAvgLatency,jdbcType=DECIMAL},
      table_scans = #{record.tableScans,jdbcType=DECIMAL},
      file_ios = #{record.fileIos,jdbcType=DECIMAL},
      file_io_latency = #{record.fileIoLatency,jdbcType=DECIMAL},
      current_connections = #{record.currentConnections,jdbcType=DECIMAL},
      total_connections = #{record.totalConnections,jdbcType=DECIMAL},
      unique_hosts = #{record.uniqueHosts,jdbcType=BIGINT},
      current_memory = #{record.currentMemory,jdbcType=DECIMAL},
      total_memory_allocated = #{record.totalMemoryAllocated,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>