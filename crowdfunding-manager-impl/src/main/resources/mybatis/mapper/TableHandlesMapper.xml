<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.TableHandlesMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.TableHandles" >
    <result column="OBJECT_TYPE" property="objectType" jdbcType="VARCHAR" />
    <result column="OBJECT_SCHEMA" property="objectSchema" jdbcType="VARCHAR" />
    <result column="OBJECT_NAME" property="objectName" jdbcType="VARCHAR" />
    <result column="OBJECT_INSTANCE_BEGIN" property="objectInstanceBegin" jdbcType="BIGINT" />
    <result column="OWNER_THREAD_ID" property="ownerThreadId" jdbcType="BIGINT" />
    <result column="OWNER_EVENT_ID" property="ownerEventId" jdbcType="BIGINT" />
    <result column="INTERNAL_LOCK" property="internalLock" jdbcType="VARCHAR" />
    <result column="EXTERNAL_LOCK" property="externalLock" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, OBJECT_INSTANCE_BEGIN, OWNER_THREAD_ID, 
    OWNER_EVENT_ID, INTERNAL_LOCK, EXTERNAL_LOCK
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.TableHandlesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from table_handles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.TableHandlesExample" >
    delete from table_handles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.TableHandles" >
    insert into table_handles (OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, 
      OBJECT_INSTANCE_BEGIN, OWNER_THREAD_ID, OWNER_EVENT_ID, 
      INTERNAL_LOCK, EXTERNAL_LOCK)
    values (#{objectType,jdbcType=VARCHAR}, #{objectSchema,jdbcType=VARCHAR}, #{objectName,jdbcType=VARCHAR}, 
      #{objectInstanceBegin,jdbcType=BIGINT}, #{ownerThreadId,jdbcType=BIGINT}, #{ownerEventId,jdbcType=BIGINT}, 
      #{internalLock,jdbcType=VARCHAR}, #{externalLock,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.TableHandles" >
    insert into table_handles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="objectType != null" >
        OBJECT_TYPE,
      </if>
      <if test="objectSchema != null" >
        OBJECT_SCHEMA,
      </if>
      <if test="objectName != null" >
        OBJECT_NAME,
      </if>
      <if test="objectInstanceBegin != null" >
        OBJECT_INSTANCE_BEGIN,
      </if>
      <if test="ownerThreadId != null" >
        OWNER_THREAD_ID,
      </if>
      <if test="ownerEventId != null" >
        OWNER_EVENT_ID,
      </if>
      <if test="internalLock != null" >
        INTERNAL_LOCK,
      </if>
      <if test="externalLock != null" >
        EXTERNAL_LOCK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="objectType != null" >
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectSchema != null" >
        #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null" >
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="objectInstanceBegin != null" >
        #{objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="ownerThreadId != null" >
        #{ownerThreadId,jdbcType=BIGINT},
      </if>
      <if test="ownerEventId != null" >
        #{ownerEventId,jdbcType=BIGINT},
      </if>
      <if test="internalLock != null" >
        #{internalLock,jdbcType=VARCHAR},
      </if>
      <if test="externalLock != null" >
        #{externalLock,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.TableHandlesExample" resultType="java.lang.Integer" >
    select count(*) from table_handles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update table_handles
    <set >
      <if test="record.objectType != null" >
        OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      </if>
      <if test="record.objectSchema != null" >
        OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.objectName != null" >
        OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      </if>
      <if test="record.objectInstanceBegin != null" >
        OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="record.ownerThreadId != null" >
        OWNER_THREAD_ID = #{record.ownerThreadId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerEventId != null" >
        OWNER_EVENT_ID = #{record.ownerEventId,jdbcType=BIGINT},
      </if>
      <if test="record.internalLock != null" >
        INTERNAL_LOCK = #{record.internalLock,jdbcType=VARCHAR},
      </if>
      <if test="record.externalLock != null" >
        EXTERNAL_LOCK = #{record.externalLock,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update table_handles
    set OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      OWNER_THREAD_ID = #{record.ownerThreadId,jdbcType=BIGINT},
      OWNER_EVENT_ID = #{record.ownerEventId,jdbcType=BIGINT},
      INTERNAL_LOCK = #{record.internalLock,jdbcType=VARCHAR},
      EXTERNAL_LOCK = #{record.externalLock,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>