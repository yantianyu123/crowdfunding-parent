<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.ProfilingMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.Profiling" >
    <result column="QUERY_ID" property="queryId" jdbcType="INTEGER" />
    <result column="SEQ" property="seq" jdbcType="INTEGER" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="DURATION" property="duration" jdbcType="DECIMAL" />
    <result column="CPU_USER" property="cpuUser" jdbcType="DECIMAL" />
    <result column="CPU_SYSTEM" property="cpuSystem" jdbcType="DECIMAL" />
    <result column="CONTEXT_VOLUNTARY" property="contextVoluntary" jdbcType="INTEGER" />
    <result column="CONTEXT_INVOLUNTARY" property="contextInvoluntary" jdbcType="INTEGER" />
    <result column="BLOCK_OPS_IN" property="blockOpsIn" jdbcType="INTEGER" />
    <result column="BLOCK_OPS_OUT" property="blockOpsOut" jdbcType="INTEGER" />
    <result column="MESSAGES_SENT" property="messagesSent" jdbcType="INTEGER" />
    <result column="MESSAGES_RECEIVED" property="messagesReceived" jdbcType="INTEGER" />
    <result column="PAGE_FAULTS_MAJOR" property="pageFaultsMajor" jdbcType="INTEGER" />
    <result column="PAGE_FAULTS_MINOR" property="pageFaultsMinor" jdbcType="INTEGER" />
    <result column="SWAPS" property="swaps" jdbcType="INTEGER" />
    <result column="SOURCE_FUNCTION" property="sourceFunction" jdbcType="VARCHAR" />
    <result column="SOURCE_FILE" property="sourceFile" jdbcType="VARCHAR" />
    <result column="SOURCE_LINE" property="sourceLine" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    QUERY_ID, SEQ, STATE, DURATION, CPU_USER, CPU_SYSTEM, CONTEXT_VOLUNTARY, CONTEXT_INVOLUNTARY, 
    BLOCK_OPS_IN, BLOCK_OPS_OUT, MESSAGES_SENT, MESSAGES_RECEIVED, PAGE_FAULTS_MAJOR, 
    PAGE_FAULTS_MINOR, SWAPS, SOURCE_FUNCTION, SOURCE_FILE, SOURCE_LINE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.ProfilingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PROFILING
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.ProfilingExample" >
    delete from PROFILING
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.Profiling" >
    insert into PROFILING (QUERY_ID, SEQ, STATE, 
      DURATION, CPU_USER, CPU_SYSTEM, 
      CONTEXT_VOLUNTARY, CONTEXT_INVOLUNTARY, BLOCK_OPS_IN, 
      BLOCK_OPS_OUT, MESSAGES_SENT, MESSAGES_RECEIVED, 
      PAGE_FAULTS_MAJOR, PAGE_FAULTS_MINOR, SWAPS, 
      SOURCE_FUNCTION, SOURCE_FILE, SOURCE_LINE
      )
    values (#{queryId,jdbcType=INTEGER}, #{seq,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, 
      #{duration,jdbcType=DECIMAL}, #{cpuUser,jdbcType=DECIMAL}, #{cpuSystem,jdbcType=DECIMAL}, 
      #{contextVoluntary,jdbcType=INTEGER}, #{contextInvoluntary,jdbcType=INTEGER}, #{blockOpsIn,jdbcType=INTEGER}, 
      #{blockOpsOut,jdbcType=INTEGER}, #{messagesSent,jdbcType=INTEGER}, #{messagesReceived,jdbcType=INTEGER}, 
      #{pageFaultsMajor,jdbcType=INTEGER}, #{pageFaultsMinor,jdbcType=INTEGER}, #{swaps,jdbcType=INTEGER}, 
      #{sourceFunction,jdbcType=VARCHAR}, #{sourceFile,jdbcType=VARCHAR}, #{sourceLine,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.Profiling" >
    insert into PROFILING
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="queryId != null" >
        QUERY_ID,
      </if>
      <if test="seq != null" >
        SEQ,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="duration != null" >
        DURATION,
      </if>
      <if test="cpuUser != null" >
        CPU_USER,
      </if>
      <if test="cpuSystem != null" >
        CPU_SYSTEM,
      </if>
      <if test="contextVoluntary != null" >
        CONTEXT_VOLUNTARY,
      </if>
      <if test="contextInvoluntary != null" >
        CONTEXT_INVOLUNTARY,
      </if>
      <if test="blockOpsIn != null" >
        BLOCK_OPS_IN,
      </if>
      <if test="blockOpsOut != null" >
        BLOCK_OPS_OUT,
      </if>
      <if test="messagesSent != null" >
        MESSAGES_SENT,
      </if>
      <if test="messagesReceived != null" >
        MESSAGES_RECEIVED,
      </if>
      <if test="pageFaultsMajor != null" >
        PAGE_FAULTS_MAJOR,
      </if>
      <if test="pageFaultsMinor != null" >
        PAGE_FAULTS_MINOR,
      </if>
      <if test="swaps != null" >
        SWAPS,
      </if>
      <if test="sourceFunction != null" >
        SOURCE_FUNCTION,
      </if>
      <if test="sourceFile != null" >
        SOURCE_FILE,
      </if>
      <if test="sourceLine != null" >
        SOURCE_LINE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="queryId != null" >
        #{queryId,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=DECIMAL},
      </if>
      <if test="cpuUser != null" >
        #{cpuUser,jdbcType=DECIMAL},
      </if>
      <if test="cpuSystem != null" >
        #{cpuSystem,jdbcType=DECIMAL},
      </if>
      <if test="contextVoluntary != null" >
        #{contextVoluntary,jdbcType=INTEGER},
      </if>
      <if test="contextInvoluntary != null" >
        #{contextInvoluntary,jdbcType=INTEGER},
      </if>
      <if test="blockOpsIn != null" >
        #{blockOpsIn,jdbcType=INTEGER},
      </if>
      <if test="blockOpsOut != null" >
        #{blockOpsOut,jdbcType=INTEGER},
      </if>
      <if test="messagesSent != null" >
        #{messagesSent,jdbcType=INTEGER},
      </if>
      <if test="messagesReceived != null" >
        #{messagesReceived,jdbcType=INTEGER},
      </if>
      <if test="pageFaultsMajor != null" >
        #{pageFaultsMajor,jdbcType=INTEGER},
      </if>
      <if test="pageFaultsMinor != null" >
        #{pageFaultsMinor,jdbcType=INTEGER},
      </if>
      <if test="swaps != null" >
        #{swaps,jdbcType=INTEGER},
      </if>
      <if test="sourceFunction != null" >
        #{sourceFunction,jdbcType=VARCHAR},
      </if>
      <if test="sourceFile != null" >
        #{sourceFile,jdbcType=VARCHAR},
      </if>
      <if test="sourceLine != null" >
        #{sourceLine,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.ProfilingExample" resultType="java.lang.Integer" >
    select count(*) from PROFILING
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PROFILING
    <set >
      <if test="record.queryId != null" >
        QUERY_ID = #{record.queryId,jdbcType=INTEGER},
      </if>
      <if test="record.seq != null" >
        SEQ = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.duration != null" >
        DURATION = #{record.duration,jdbcType=DECIMAL},
      </if>
      <if test="record.cpuUser != null" >
        CPU_USER = #{record.cpuUser,jdbcType=DECIMAL},
      </if>
      <if test="record.cpuSystem != null" >
        CPU_SYSTEM = #{record.cpuSystem,jdbcType=DECIMAL},
      </if>
      <if test="record.contextVoluntary != null" >
        CONTEXT_VOLUNTARY = #{record.contextVoluntary,jdbcType=INTEGER},
      </if>
      <if test="record.contextInvoluntary != null" >
        CONTEXT_INVOLUNTARY = #{record.contextInvoluntary,jdbcType=INTEGER},
      </if>
      <if test="record.blockOpsIn != null" >
        BLOCK_OPS_IN = #{record.blockOpsIn,jdbcType=INTEGER},
      </if>
      <if test="record.blockOpsOut != null" >
        BLOCK_OPS_OUT = #{record.blockOpsOut,jdbcType=INTEGER},
      </if>
      <if test="record.messagesSent != null" >
        MESSAGES_SENT = #{record.messagesSent,jdbcType=INTEGER},
      </if>
      <if test="record.messagesReceived != null" >
        MESSAGES_RECEIVED = #{record.messagesReceived,jdbcType=INTEGER},
      </if>
      <if test="record.pageFaultsMajor != null" >
        PAGE_FAULTS_MAJOR = #{record.pageFaultsMajor,jdbcType=INTEGER},
      </if>
      <if test="record.pageFaultsMinor != null" >
        PAGE_FAULTS_MINOR = #{record.pageFaultsMinor,jdbcType=INTEGER},
      </if>
      <if test="record.swaps != null" >
        SWAPS = #{record.swaps,jdbcType=INTEGER},
      </if>
      <if test="record.sourceFunction != null" >
        SOURCE_FUNCTION = #{record.sourceFunction,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceFile != null" >
        SOURCE_FILE = #{record.sourceFile,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceLine != null" >
        SOURCE_LINE = #{record.sourceLine,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PROFILING
    set QUERY_ID = #{record.queryId,jdbcType=INTEGER},
      SEQ = #{record.seq,jdbcType=INTEGER},
      STATE = #{record.state,jdbcType=VARCHAR},
      DURATION = #{record.duration,jdbcType=DECIMAL},
      CPU_USER = #{record.cpuUser,jdbcType=DECIMAL},
      CPU_SYSTEM = #{record.cpuSystem,jdbcType=DECIMAL},
      CONTEXT_VOLUNTARY = #{record.contextVoluntary,jdbcType=INTEGER},
      CONTEXT_INVOLUNTARY = #{record.contextInvoluntary,jdbcType=INTEGER},
      BLOCK_OPS_IN = #{record.blockOpsIn,jdbcType=INTEGER},
      BLOCK_OPS_OUT = #{record.blockOpsOut,jdbcType=INTEGER},
      MESSAGES_SENT = #{record.messagesSent,jdbcType=INTEGER},
      MESSAGES_RECEIVED = #{record.messagesReceived,jdbcType=INTEGER},
      PAGE_FAULTS_MAJOR = #{record.pageFaultsMajor,jdbcType=INTEGER},
      PAGE_FAULTS_MINOR = #{record.pageFaultsMinor,jdbcType=INTEGER},
      SWAPS = #{record.swaps,jdbcType=INTEGER},
      SOURCE_FUNCTION = #{record.sourceFunction,jdbcType=VARCHAR},
      SOURCE_FILE = #{record.sourceFile,jdbcType=VARCHAR},
      SOURCE_LINE = #{record.sourceLine,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>