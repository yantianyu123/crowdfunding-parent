<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.SlaveRelayLogInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.SlaveRelayLogInfo" >
    <result column="Number_of_lines" property="numberOfLines" jdbcType="INTEGER" />
    <result column="Relay_log_pos" property="relayLogPos" jdbcType="BIGINT" />
    <result column="Master_log_pos" property="masterLogPos" jdbcType="BIGINT" />
    <result column="Sql_delay" property="sqlDelay" jdbcType="INTEGER" />
    <result column="Number_of_workers" property="numberOfWorkers" jdbcType="INTEGER" />
    <result column="Id" property="id" jdbcType="INTEGER" />
    <result column="Channel_name" property="channelName" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.SlaveRelayLogInfoWithBLOBs" extends="BaseResultMap" >
    <result column="Relay_log_name" property="relayLogName" jdbcType="LONGVARCHAR" />
    <result column="Master_log_name" property="masterLogName" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Number_of_lines, Relay_log_pos, Master_log_pos, Sql_delay, Number_of_workers, Id, 
    Channel_name
  </sql>
  <sql id="Blob_Column_List" >
    Relay_log_name, Master_log_name
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.SlaveRelayLogInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from slave_relay_log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.SlaveRelayLogInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slave_relay_log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.SlaveRelayLogInfoExample" >
    delete from slave_relay_log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.SlaveRelayLogInfoWithBLOBs" >
    insert into slave_relay_log_info (Number_of_lines, Relay_log_pos, Master_log_pos, 
      Sql_delay, Number_of_workers, Id, 
      Channel_name, Relay_log_name, Master_log_name
      )
    values (#{numberOfLines,jdbcType=INTEGER}, #{relayLogPos,jdbcType=BIGINT}, #{masterLogPos,jdbcType=BIGINT}, 
      #{sqlDelay,jdbcType=INTEGER}, #{numberOfWorkers,jdbcType=INTEGER}, #{id,jdbcType=INTEGER}, 
      #{channelName,jdbcType=CHAR}, #{relayLogName,jdbcType=LONGVARCHAR}, #{masterLogName,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.SlaveRelayLogInfoWithBLOBs" >
    insert into slave_relay_log_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="numberOfLines != null" >
        Number_of_lines,
      </if>
      <if test="relayLogPos != null" >
        Relay_log_pos,
      </if>
      <if test="masterLogPos != null" >
        Master_log_pos,
      </if>
      <if test="sqlDelay != null" >
        Sql_delay,
      </if>
      <if test="numberOfWorkers != null" >
        Number_of_workers,
      </if>
      <if test="id != null" >
        Id,
      </if>
      <if test="channelName != null" >
        Channel_name,
      </if>
      <if test="relayLogName != null" >
        Relay_log_name,
      </if>
      <if test="masterLogName != null" >
        Master_log_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="numberOfLines != null" >
        #{numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="relayLogPos != null" >
        #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null" >
        #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="sqlDelay != null" >
        #{sqlDelay,jdbcType=INTEGER},
      </if>
      <if test="numberOfWorkers != null" >
        #{numberOfWorkers,jdbcType=INTEGER},
      </if>
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="channelName != null" >
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="relayLogName != null" >
        #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null" >
        #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.SlaveRelayLogInfoExample" resultType="java.lang.Integer" >
    select count(*) from slave_relay_log_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update slave_relay_log_info
    <set >
      <if test="record.numberOfLines != null" >
        Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="record.relayLogPos != null" >
        Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.masterLogPos != null" >
        Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.sqlDelay != null" >
        Sql_delay = #{record.sqlDelay,jdbcType=INTEGER},
      </if>
      <if test="record.numberOfWorkers != null" >
        Number_of_workers = #{record.numberOfWorkers,jdbcType=INTEGER},
      </if>
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.channelName != null" >
        Channel_name = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.relayLogName != null" >
        Relay_log_name = #{record.relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.masterLogName != null" >
        Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update slave_relay_log_info
    set Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{record.sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{record.numberOfWorkers,jdbcType=INTEGER},
      Id = #{record.id,jdbcType=INTEGER},
      Channel_name = #{record.channelName,jdbcType=CHAR},
      Relay_log_name = #{record.relayLogName,jdbcType=LONGVARCHAR},
      Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update slave_relay_log_info
    set Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Sql_delay = #{record.sqlDelay,jdbcType=INTEGER},
      Number_of_workers = #{record.numberOfWorkers,jdbcType=INTEGER},
      Id = #{record.id,jdbcType=INTEGER},
      Channel_name = #{record.channelName,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>