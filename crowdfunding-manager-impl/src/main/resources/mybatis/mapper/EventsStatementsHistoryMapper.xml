<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.EventsStatementsHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.EventsStatementsHistory" >
    <result column="THREAD_ID" property="threadId" jdbcType="BIGINT" />
    <result column="EVENT_ID" property="eventId" jdbcType="BIGINT" />
    <result column="END_EVENT_ID" property="endEventId" jdbcType="BIGINT" />
    <result column="EVENT_NAME" property="eventName" jdbcType="VARCHAR" />
    <result column="SOURCE" property="source" jdbcType="VARCHAR" />
    <result column="TIMER_START" property="timerStart" jdbcType="BIGINT" />
    <result column="TIMER_END" property="timerEnd" jdbcType="BIGINT" />
    <result column="TIMER_WAIT" property="timerWait" jdbcType="BIGINT" />
    <result column="LOCK_TIME" property="lockTime" jdbcType="BIGINT" />
    <result column="DIGEST" property="digest" jdbcType="VARCHAR" />
    <result column="CURRENT_SCHEMA" property="currentSchema" jdbcType="VARCHAR" />
    <result column="OBJECT_TYPE" property="objectType" jdbcType="VARCHAR" />
    <result column="OBJECT_SCHEMA" property="objectSchema" jdbcType="VARCHAR" />
    <result column="OBJECT_NAME" property="objectName" jdbcType="VARCHAR" />
    <result column="OBJECT_INSTANCE_BEGIN" property="objectInstanceBegin" jdbcType="BIGINT" />
    <result column="MYSQL_ERRNO" property="mysqlErrno" jdbcType="INTEGER" />
    <result column="RETURNED_SQLSTATE" property="returnedSqlstate" jdbcType="VARCHAR" />
    <result column="MESSAGE_TEXT" property="messageText" jdbcType="VARCHAR" />
    <result column="ERRORS" property="errors" jdbcType="BIGINT" />
    <result column="WARNINGS" property="warnings" jdbcType="BIGINT" />
    <result column="ROWS_AFFECTED" property="rowsAffected" jdbcType="BIGINT" />
    <result column="ROWS_SENT" property="rowsSent" jdbcType="BIGINT" />
    <result column="ROWS_EXAMINED" property="rowsExamined" jdbcType="BIGINT" />
    <result column="CREATED_TMP_DISK_TABLES" property="createdTmpDiskTables" jdbcType="BIGINT" />
    <result column="CREATED_TMP_TABLES" property="createdTmpTables" jdbcType="BIGINT" />
    <result column="SELECT_FULL_JOIN" property="selectFullJoin" jdbcType="BIGINT" />
    <result column="SELECT_FULL_RANGE_JOIN" property="selectFullRangeJoin" jdbcType="BIGINT" />
    <result column="SELECT_RANGE" property="selectRange" jdbcType="BIGINT" />
    <result column="SELECT_RANGE_CHECK" property="selectRangeCheck" jdbcType="BIGINT" />
    <result column="SELECT_SCAN" property="selectScan" jdbcType="BIGINT" />
    <result column="SORT_MERGE_PASSES" property="sortMergePasses" jdbcType="BIGINT" />
    <result column="SORT_RANGE" property="sortRange" jdbcType="BIGINT" />
    <result column="SORT_ROWS" property="sortRows" jdbcType="BIGINT" />
    <result column="SORT_SCAN" property="sortScan" jdbcType="BIGINT" />
    <result column="NO_INDEX_USED" property="noIndexUsed" jdbcType="BIGINT" />
    <result column="NO_GOOD_INDEX_USED" property="noGoodIndexUsed" jdbcType="BIGINT" />
    <result column="NESTING_EVENT_ID" property="nestingEventId" jdbcType="BIGINT" />
    <result column="NESTING_EVENT_TYPE" property="nestingEventType" jdbcType="CHAR" />
    <result column="NESTING_EVENT_LEVEL" property="nestingEventLevel" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.EventsStatementsHistoryWithBLOBs" extends="BaseResultMap" >
    <result column="SQL_TEXT" property="sqlText" jdbcType="LONGVARCHAR" />
    <result column="DIGEST_TEXT" property="digestText" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    THREAD_ID, EVENT_ID, END_EVENT_ID, EVENT_NAME, SOURCE, TIMER_START, TIMER_END, TIMER_WAIT, 
    LOCK_TIME, DIGEST, CURRENT_SCHEMA, OBJECT_TYPE, OBJECT_SCHEMA, OBJECT_NAME, OBJECT_INSTANCE_BEGIN, 
    MYSQL_ERRNO, RETURNED_SQLSTATE, MESSAGE_TEXT, ERRORS, WARNINGS, ROWS_AFFECTED, ROWS_SENT, 
    ROWS_EXAMINED, CREATED_TMP_DISK_TABLES, CREATED_TMP_TABLES, SELECT_FULL_JOIN, SELECT_FULL_RANGE_JOIN, 
    SELECT_RANGE, SELECT_RANGE_CHECK, SELECT_SCAN, SORT_MERGE_PASSES, SORT_RANGE, SORT_ROWS, 
    SORT_SCAN, NO_INDEX_USED, NO_GOOD_INDEX_USED, NESTING_EVENT_ID, NESTING_EVENT_TYPE, 
    NESTING_EVENT_LEVEL
  </sql>
  <sql id="Blob_Column_List" >
    SQL_TEXT, DIGEST_TEXT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.EventsStatementsHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from events_statements_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.EventsStatementsHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from events_statements_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.EventsStatementsHistoryExample" >
    delete from events_statements_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.EventsStatementsHistoryWithBLOBs" >
    insert into events_statements_history (THREAD_ID, EVENT_ID, END_EVENT_ID, 
      EVENT_NAME, SOURCE, TIMER_START, 
      TIMER_END, TIMER_WAIT, LOCK_TIME, 
      DIGEST, CURRENT_SCHEMA, OBJECT_TYPE, 
      OBJECT_SCHEMA, OBJECT_NAME, OBJECT_INSTANCE_BEGIN, 
      MYSQL_ERRNO, RETURNED_SQLSTATE, MESSAGE_TEXT, 
      ERRORS, WARNINGS, ROWS_AFFECTED, 
      ROWS_SENT, ROWS_EXAMINED, CREATED_TMP_DISK_TABLES, 
      CREATED_TMP_TABLES, SELECT_FULL_JOIN, SELECT_FULL_RANGE_JOIN, 
      SELECT_RANGE, SELECT_RANGE_CHECK, SELECT_SCAN, 
      SORT_MERGE_PASSES, SORT_RANGE, SORT_ROWS, 
      SORT_SCAN, NO_INDEX_USED, NO_GOOD_INDEX_USED, 
      NESTING_EVENT_ID, NESTING_EVENT_TYPE, NESTING_EVENT_LEVEL, 
      SQL_TEXT, DIGEST_TEXT)
    values (#{threadId,jdbcType=BIGINT}, #{eventId,jdbcType=BIGINT}, #{endEventId,jdbcType=BIGINT}, 
      #{eventName,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{timerStart,jdbcType=BIGINT}, 
      #{timerEnd,jdbcType=BIGINT}, #{timerWait,jdbcType=BIGINT}, #{lockTime,jdbcType=BIGINT}, 
      #{digest,jdbcType=VARCHAR}, #{currentSchema,jdbcType=VARCHAR}, #{objectType,jdbcType=VARCHAR}, 
      #{objectSchema,jdbcType=VARCHAR}, #{objectName,jdbcType=VARCHAR}, #{objectInstanceBegin,jdbcType=BIGINT}, 
      #{mysqlErrno,jdbcType=INTEGER}, #{returnedSqlstate,jdbcType=VARCHAR}, #{messageText,jdbcType=VARCHAR}, 
      #{errors,jdbcType=BIGINT}, #{warnings,jdbcType=BIGINT}, #{rowsAffected,jdbcType=BIGINT}, 
      #{rowsSent,jdbcType=BIGINT}, #{rowsExamined,jdbcType=BIGINT}, #{createdTmpDiskTables,jdbcType=BIGINT}, 
      #{createdTmpTables,jdbcType=BIGINT}, #{selectFullJoin,jdbcType=BIGINT}, #{selectFullRangeJoin,jdbcType=BIGINT}, 
      #{selectRange,jdbcType=BIGINT}, #{selectRangeCheck,jdbcType=BIGINT}, #{selectScan,jdbcType=BIGINT}, 
      #{sortMergePasses,jdbcType=BIGINT}, #{sortRange,jdbcType=BIGINT}, #{sortRows,jdbcType=BIGINT}, 
      #{sortScan,jdbcType=BIGINT}, #{noIndexUsed,jdbcType=BIGINT}, #{noGoodIndexUsed,jdbcType=BIGINT}, 
      #{nestingEventId,jdbcType=BIGINT}, #{nestingEventType,jdbcType=CHAR}, #{nestingEventLevel,jdbcType=INTEGER}, 
      #{sqlText,jdbcType=LONGVARCHAR}, #{digestText,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.EventsStatementsHistoryWithBLOBs" >
    insert into events_statements_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="threadId != null" >
        THREAD_ID,
      </if>
      <if test="eventId != null" >
        EVENT_ID,
      </if>
      <if test="endEventId != null" >
        END_EVENT_ID,
      </if>
      <if test="eventName != null" >
        EVENT_NAME,
      </if>
      <if test="source != null" >
        SOURCE,
      </if>
      <if test="timerStart != null" >
        TIMER_START,
      </if>
      <if test="timerEnd != null" >
        TIMER_END,
      </if>
      <if test="timerWait != null" >
        TIMER_WAIT,
      </if>
      <if test="lockTime != null" >
        LOCK_TIME,
      </if>
      <if test="digest != null" >
        DIGEST,
      </if>
      <if test="currentSchema != null" >
        CURRENT_SCHEMA,
      </if>
      <if test="objectType != null" >
        OBJECT_TYPE,
      </if>
      <if test="objectSchema != null" >
        OBJECT_SCHEMA,
      </if>
      <if test="objectName != null" >
        OBJECT_NAME,
      </if>
      <if test="objectInstanceBegin != null" >
        OBJECT_INSTANCE_BEGIN,
      </if>
      <if test="mysqlErrno != null" >
        MYSQL_ERRNO,
      </if>
      <if test="returnedSqlstate != null" >
        RETURNED_SQLSTATE,
      </if>
      <if test="messageText != null" >
        MESSAGE_TEXT,
      </if>
      <if test="errors != null" >
        ERRORS,
      </if>
      <if test="warnings != null" >
        WARNINGS,
      </if>
      <if test="rowsAffected != null" >
        ROWS_AFFECTED,
      </if>
      <if test="rowsSent != null" >
        ROWS_SENT,
      </if>
      <if test="rowsExamined != null" >
        ROWS_EXAMINED,
      </if>
      <if test="createdTmpDiskTables != null" >
        CREATED_TMP_DISK_TABLES,
      </if>
      <if test="createdTmpTables != null" >
        CREATED_TMP_TABLES,
      </if>
      <if test="selectFullJoin != null" >
        SELECT_FULL_JOIN,
      </if>
      <if test="selectFullRangeJoin != null" >
        SELECT_FULL_RANGE_JOIN,
      </if>
      <if test="selectRange != null" >
        SELECT_RANGE,
      </if>
      <if test="selectRangeCheck != null" >
        SELECT_RANGE_CHECK,
      </if>
      <if test="selectScan != null" >
        SELECT_SCAN,
      </if>
      <if test="sortMergePasses != null" >
        SORT_MERGE_PASSES,
      </if>
      <if test="sortRange != null" >
        SORT_RANGE,
      </if>
      <if test="sortRows != null" >
        SORT_ROWS,
      </if>
      <if test="sortScan != null" >
        SORT_SCAN,
      </if>
      <if test="noIndexUsed != null" >
        NO_INDEX_USED,
      </if>
      <if test="noGoodIndexUsed != null" >
        NO_GOOD_INDEX_USED,
      </if>
      <if test="nestingEventId != null" >
        NESTING_EVENT_ID,
      </if>
      <if test="nestingEventType != null" >
        NESTING_EVENT_TYPE,
      </if>
      <if test="nestingEventLevel != null" >
        NESTING_EVENT_LEVEL,
      </if>
      <if test="sqlText != null" >
        SQL_TEXT,
      </if>
      <if test="digestText != null" >
        DIGEST_TEXT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="threadId != null" >
        #{threadId,jdbcType=BIGINT},
      </if>
      <if test="eventId != null" >
        #{eventId,jdbcType=BIGINT},
      </if>
      <if test="endEventId != null" >
        #{endEventId,jdbcType=BIGINT},
      </if>
      <if test="eventName != null" >
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="timerStart != null" >
        #{timerStart,jdbcType=BIGINT},
      </if>
      <if test="timerEnd != null" >
        #{timerEnd,jdbcType=BIGINT},
      </if>
      <if test="timerWait != null" >
        #{timerWait,jdbcType=BIGINT},
      </if>
      <if test="lockTime != null" >
        #{lockTime,jdbcType=BIGINT},
      </if>
      <if test="digest != null" >
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="currentSchema != null" >
        #{currentSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectType != null" >
        #{objectType,jdbcType=VARCHAR},
      </if>
      <if test="objectSchema != null" >
        #{objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="objectName != null" >
        #{objectName,jdbcType=VARCHAR},
      </if>
      <if test="objectInstanceBegin != null" >
        #{objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="mysqlErrno != null" >
        #{mysqlErrno,jdbcType=INTEGER},
      </if>
      <if test="returnedSqlstate != null" >
        #{returnedSqlstate,jdbcType=VARCHAR},
      </if>
      <if test="messageText != null" >
        #{messageText,jdbcType=VARCHAR},
      </if>
      <if test="errors != null" >
        #{errors,jdbcType=BIGINT},
      </if>
      <if test="warnings != null" >
        #{warnings,jdbcType=BIGINT},
      </if>
      <if test="rowsAffected != null" >
        #{rowsAffected,jdbcType=BIGINT},
      </if>
      <if test="rowsSent != null" >
        #{rowsSent,jdbcType=BIGINT},
      </if>
      <if test="rowsExamined != null" >
        #{rowsExamined,jdbcType=BIGINT},
      </if>
      <if test="createdTmpDiskTables != null" >
        #{createdTmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="createdTmpTables != null" >
        #{createdTmpTables,jdbcType=BIGINT},
      </if>
      <if test="selectFullJoin != null" >
        #{selectFullJoin,jdbcType=BIGINT},
      </if>
      <if test="selectFullRangeJoin != null" >
        #{selectFullRangeJoin,jdbcType=BIGINT},
      </if>
      <if test="selectRange != null" >
        #{selectRange,jdbcType=BIGINT},
      </if>
      <if test="selectRangeCheck != null" >
        #{selectRangeCheck,jdbcType=BIGINT},
      </if>
      <if test="selectScan != null" >
        #{selectScan,jdbcType=BIGINT},
      </if>
      <if test="sortMergePasses != null" >
        #{sortMergePasses,jdbcType=BIGINT},
      </if>
      <if test="sortRange != null" >
        #{sortRange,jdbcType=BIGINT},
      </if>
      <if test="sortRows != null" >
        #{sortRows,jdbcType=BIGINT},
      </if>
      <if test="sortScan != null" >
        #{sortScan,jdbcType=BIGINT},
      </if>
      <if test="noIndexUsed != null" >
        #{noIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="noGoodIndexUsed != null" >
        #{noGoodIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="nestingEventId != null" >
        #{nestingEventId,jdbcType=BIGINT},
      </if>
      <if test="nestingEventType != null" >
        #{nestingEventType,jdbcType=CHAR},
      </if>
      <if test="nestingEventLevel != null" >
        #{nestingEventLevel,jdbcType=INTEGER},
      </if>
      <if test="sqlText != null" >
        #{sqlText,jdbcType=LONGVARCHAR},
      </if>
      <if test="digestText != null" >
        #{digestText,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.EventsStatementsHistoryExample" resultType="java.lang.Integer" >
    select count(*) from events_statements_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update events_statements_history
    <set >
      <if test="record.threadId != null" >
        THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      </if>
      <if test="record.eventId != null" >
        EVENT_ID = #{record.eventId,jdbcType=BIGINT},
      </if>
      <if test="record.endEventId != null" >
        END_EVENT_ID = #{record.endEventId,jdbcType=BIGINT},
      </if>
      <if test="record.eventName != null" >
        EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null" >
        SOURCE = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.timerStart != null" >
        TIMER_START = #{record.timerStart,jdbcType=BIGINT},
      </if>
      <if test="record.timerEnd != null" >
        TIMER_END = #{record.timerEnd,jdbcType=BIGINT},
      </if>
      <if test="record.timerWait != null" >
        TIMER_WAIT = #{record.timerWait,jdbcType=BIGINT},
      </if>
      <if test="record.lockTime != null" >
        LOCK_TIME = #{record.lockTime,jdbcType=BIGINT},
      </if>
      <if test="record.digest != null" >
        DIGEST = #{record.digest,jdbcType=VARCHAR},
      </if>
      <if test="record.currentSchema != null" >
        CURRENT_SCHEMA = #{record.currentSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.objectType != null" >
        OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      </if>
      <if test="record.objectSchema != null" >
        OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.objectName != null" >
        OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      </if>
      <if test="record.objectInstanceBegin != null" >
        OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      </if>
      <if test="record.mysqlErrno != null" >
        MYSQL_ERRNO = #{record.mysqlErrno,jdbcType=INTEGER},
      </if>
      <if test="record.returnedSqlstate != null" >
        RETURNED_SQLSTATE = #{record.returnedSqlstate,jdbcType=VARCHAR},
      </if>
      <if test="record.messageText != null" >
        MESSAGE_TEXT = #{record.messageText,jdbcType=VARCHAR},
      </if>
      <if test="record.errors != null" >
        ERRORS = #{record.errors,jdbcType=BIGINT},
      </if>
      <if test="record.warnings != null" >
        WARNINGS = #{record.warnings,jdbcType=BIGINT},
      </if>
      <if test="record.rowsAffected != null" >
        ROWS_AFFECTED = #{record.rowsAffected,jdbcType=BIGINT},
      </if>
      <if test="record.rowsSent != null" >
        ROWS_SENT = #{record.rowsSent,jdbcType=BIGINT},
      </if>
      <if test="record.rowsExamined != null" >
        ROWS_EXAMINED = #{record.rowsExamined,jdbcType=BIGINT},
      </if>
      <if test="record.createdTmpDiskTables != null" >
        CREATED_TMP_DISK_TABLES = #{record.createdTmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="record.createdTmpTables != null" >
        CREATED_TMP_TABLES = #{record.createdTmpTables,jdbcType=BIGINT},
      </if>
      <if test="record.selectFullJoin != null" >
        SELECT_FULL_JOIN = #{record.selectFullJoin,jdbcType=BIGINT},
      </if>
      <if test="record.selectFullRangeJoin != null" >
        SELECT_FULL_RANGE_JOIN = #{record.selectFullRangeJoin,jdbcType=BIGINT},
      </if>
      <if test="record.selectRange != null" >
        SELECT_RANGE = #{record.selectRange,jdbcType=BIGINT},
      </if>
      <if test="record.selectRangeCheck != null" >
        SELECT_RANGE_CHECK = #{record.selectRangeCheck,jdbcType=BIGINT},
      </if>
      <if test="record.selectScan != null" >
        SELECT_SCAN = #{record.selectScan,jdbcType=BIGINT},
      </if>
      <if test="record.sortMergePasses != null" >
        SORT_MERGE_PASSES = #{record.sortMergePasses,jdbcType=BIGINT},
      </if>
      <if test="record.sortRange != null" >
        SORT_RANGE = #{record.sortRange,jdbcType=BIGINT},
      </if>
      <if test="record.sortRows != null" >
        SORT_ROWS = #{record.sortRows,jdbcType=BIGINT},
      </if>
      <if test="record.sortScan != null" >
        SORT_SCAN = #{record.sortScan,jdbcType=BIGINT},
      </if>
      <if test="record.noIndexUsed != null" >
        NO_INDEX_USED = #{record.noIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="record.noGoodIndexUsed != null" >
        NO_GOOD_INDEX_USED = #{record.noGoodIndexUsed,jdbcType=BIGINT},
      </if>
      <if test="record.nestingEventId != null" >
        NESTING_EVENT_ID = #{record.nestingEventId,jdbcType=BIGINT},
      </if>
      <if test="record.nestingEventType != null" >
        NESTING_EVENT_TYPE = #{record.nestingEventType,jdbcType=CHAR},
      </if>
      <if test="record.nestingEventLevel != null" >
        NESTING_EVENT_LEVEL = #{record.nestingEventLevel,jdbcType=INTEGER},
      </if>
      <if test="record.sqlText != null" >
        SQL_TEXT = #{record.sqlText,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.digestText != null" >
        DIGEST_TEXT = #{record.digestText,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update events_statements_history
    set THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      EVENT_ID = #{record.eventId,jdbcType=BIGINT},
      END_EVENT_ID = #{record.endEventId,jdbcType=BIGINT},
      EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      SOURCE = #{record.source,jdbcType=VARCHAR},
      TIMER_START = #{record.timerStart,jdbcType=BIGINT},
      TIMER_END = #{record.timerEnd,jdbcType=BIGINT},
      TIMER_WAIT = #{record.timerWait,jdbcType=BIGINT},
      LOCK_TIME = #{record.lockTime,jdbcType=BIGINT},
      DIGEST = #{record.digest,jdbcType=VARCHAR},
      CURRENT_SCHEMA = #{record.currentSchema,jdbcType=VARCHAR},
      OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      MYSQL_ERRNO = #{record.mysqlErrno,jdbcType=INTEGER},
      RETURNED_SQLSTATE = #{record.returnedSqlstate,jdbcType=VARCHAR},
      MESSAGE_TEXT = #{record.messageText,jdbcType=VARCHAR},
      ERRORS = #{record.errors,jdbcType=BIGINT},
      WARNINGS = #{record.warnings,jdbcType=BIGINT},
      ROWS_AFFECTED = #{record.rowsAffected,jdbcType=BIGINT},
      ROWS_SENT = #{record.rowsSent,jdbcType=BIGINT},
      ROWS_EXAMINED = #{record.rowsExamined,jdbcType=BIGINT},
      CREATED_TMP_DISK_TABLES = #{record.createdTmpDiskTables,jdbcType=BIGINT},
      CREATED_TMP_TABLES = #{record.createdTmpTables,jdbcType=BIGINT},
      SELECT_FULL_JOIN = #{record.selectFullJoin,jdbcType=BIGINT},
      SELECT_FULL_RANGE_JOIN = #{record.selectFullRangeJoin,jdbcType=BIGINT},
      SELECT_RANGE = #{record.selectRange,jdbcType=BIGINT},
      SELECT_RANGE_CHECK = #{record.selectRangeCheck,jdbcType=BIGINT},
      SELECT_SCAN = #{record.selectScan,jdbcType=BIGINT},
      SORT_MERGE_PASSES = #{record.sortMergePasses,jdbcType=BIGINT},
      SORT_RANGE = #{record.sortRange,jdbcType=BIGINT},
      SORT_ROWS = #{record.sortRows,jdbcType=BIGINT},
      SORT_SCAN = #{record.sortScan,jdbcType=BIGINT},
      NO_INDEX_USED = #{record.noIndexUsed,jdbcType=BIGINT},
      NO_GOOD_INDEX_USED = #{record.noGoodIndexUsed,jdbcType=BIGINT},
      NESTING_EVENT_ID = #{record.nestingEventId,jdbcType=BIGINT},
      NESTING_EVENT_TYPE = #{record.nestingEventType,jdbcType=CHAR},
      NESTING_EVENT_LEVEL = #{record.nestingEventLevel,jdbcType=INTEGER},
      SQL_TEXT = #{record.sqlText,jdbcType=LONGVARCHAR},
      DIGEST_TEXT = #{record.digestText,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update events_statements_history
    set THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      EVENT_ID = #{record.eventId,jdbcType=BIGINT},
      END_EVENT_ID = #{record.endEventId,jdbcType=BIGINT},
      EVENT_NAME = #{record.eventName,jdbcType=VARCHAR},
      SOURCE = #{record.source,jdbcType=VARCHAR},
      TIMER_START = #{record.timerStart,jdbcType=BIGINT},
      TIMER_END = #{record.timerEnd,jdbcType=BIGINT},
      TIMER_WAIT = #{record.timerWait,jdbcType=BIGINT},
      LOCK_TIME = #{record.lockTime,jdbcType=BIGINT},
      DIGEST = #{record.digest,jdbcType=VARCHAR},
      CURRENT_SCHEMA = #{record.currentSchema,jdbcType=VARCHAR},
      OBJECT_TYPE = #{record.objectType,jdbcType=VARCHAR},
      OBJECT_SCHEMA = #{record.objectSchema,jdbcType=VARCHAR},
      OBJECT_NAME = #{record.objectName,jdbcType=VARCHAR},
      OBJECT_INSTANCE_BEGIN = #{record.objectInstanceBegin,jdbcType=BIGINT},
      MYSQL_ERRNO = #{record.mysqlErrno,jdbcType=INTEGER},
      RETURNED_SQLSTATE = #{record.returnedSqlstate,jdbcType=VARCHAR},
      MESSAGE_TEXT = #{record.messageText,jdbcType=VARCHAR},
      ERRORS = #{record.errors,jdbcType=BIGINT},
      WARNINGS = #{record.warnings,jdbcType=BIGINT},
      ROWS_AFFECTED = #{record.rowsAffected,jdbcType=BIGINT},
      ROWS_SENT = #{record.rowsSent,jdbcType=BIGINT},
      ROWS_EXAMINED = #{record.rowsExamined,jdbcType=BIGINT},
      CREATED_TMP_DISK_TABLES = #{record.createdTmpDiskTables,jdbcType=BIGINT},
      CREATED_TMP_TABLES = #{record.createdTmpTables,jdbcType=BIGINT},
      SELECT_FULL_JOIN = #{record.selectFullJoin,jdbcType=BIGINT},
      SELECT_FULL_RANGE_JOIN = #{record.selectFullRangeJoin,jdbcType=BIGINT},
      SELECT_RANGE = #{record.selectRange,jdbcType=BIGINT},
      SELECT_RANGE_CHECK = #{record.selectRangeCheck,jdbcType=BIGINT},
      SELECT_SCAN = #{record.selectScan,jdbcType=BIGINT},
      SORT_MERGE_PASSES = #{record.sortMergePasses,jdbcType=BIGINT},
      SORT_RANGE = #{record.sortRange,jdbcType=BIGINT},
      SORT_ROWS = #{record.sortRows,jdbcType=BIGINT},
      SORT_SCAN = #{record.sortScan,jdbcType=BIGINT},
      NO_INDEX_USED = #{record.noIndexUsed,jdbcType=BIGINT},
      NO_GOOD_INDEX_USED = #{record.noGoodIndexUsed,jdbcType=BIGINT},
      NESTING_EVENT_ID = #{record.nestingEventId,jdbcType=BIGINT},
      NESTING_EVENT_TYPE = #{record.nestingEventType,jdbcType=CHAR},
      NESTING_EVENT_LEVEL = #{record.nestingEventLevel,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>