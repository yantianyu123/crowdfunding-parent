<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.SlaveMasterInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.SlaveMasterInfo" >
    <result column="Number_of_lines" property="numberOfLines" jdbcType="INTEGER" />
    <result column="Master_log_pos" property="masterLogPos" jdbcType="BIGINT" />
    <result column="Host" property="host" jdbcType="CHAR" />
    <result column="Port" property="port" jdbcType="INTEGER" />
    <result column="Connect_retry" property="connectRetry" jdbcType="INTEGER" />
    <result column="Enabled_ssl" property="enabledSsl" jdbcType="BIT" />
    <result column="Ssl_verify_server_cert" property="sslVerifyServerCert" jdbcType="BIT" />
    <result column="Heartbeat" property="heartbeat" jdbcType="REAL" />
    <result column="Retry_count" property="retryCount" jdbcType="BIGINT" />
    <result column="Enabled_auto_position" property="enabledAutoPosition" jdbcType="BIT" />
    <result column="Channel_name" property="channelName" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.SlaveMasterInfoWithBLOBs" extends="BaseResultMap" >
    <result column="Master_log_name" property="masterLogName" jdbcType="LONGVARCHAR" />
    <result column="User_name" property="userName" jdbcType="LONGVARCHAR" />
    <result column="User_password" property="userPassword" jdbcType="LONGVARCHAR" />
    <result column="Ssl_ca" property="sslCa" jdbcType="LONGVARCHAR" />
    <result column="Ssl_capath" property="sslCapath" jdbcType="LONGVARCHAR" />
    <result column="Ssl_cert" property="sslCert" jdbcType="LONGVARCHAR" />
    <result column="Ssl_cipher" property="sslCipher" jdbcType="LONGVARCHAR" />
    <result column="Ssl_key" property="sslKey" jdbcType="LONGVARCHAR" />
    <result column="Bind" property="bind" jdbcType="LONGVARCHAR" />
    <result column="Ignored_server_ids" property="ignoredServerIds" jdbcType="LONGVARCHAR" />
    <result column="Uuid" property="uuid" jdbcType="LONGVARCHAR" />
    <result column="Ssl_crl" property="sslCrl" jdbcType="LONGVARCHAR" />
    <result column="Ssl_crlpath" property="sslCrlpath" jdbcType="LONGVARCHAR" />
    <result column="Tls_version" property="tlsVersion" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Number_of_lines, Master_log_pos, Host, Port, Connect_retry, Enabled_ssl, Ssl_verify_server_cert, 
    Heartbeat, Retry_count, Enabled_auto_position, Channel_name
  </sql>
  <sql id="Blob_Column_List" >
    Master_log_name, User_name, User_password, Ssl_ca, Ssl_capath, Ssl_cert, Ssl_cipher, 
    Ssl_key, Bind, Ignored_server_ids, Uuid, Ssl_crl, Ssl_crlpath, Tls_version
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.SlaveMasterInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from slave_master_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.SlaveMasterInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slave_master_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.SlaveMasterInfoExample" >
    delete from slave_master_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.SlaveMasterInfoWithBLOBs" >
    insert into slave_master_info (Number_of_lines, Master_log_pos, Host, 
      Port, Connect_retry, Enabled_ssl, 
      Ssl_verify_server_cert, Heartbeat, Retry_count, 
      Enabled_auto_position, Channel_name, Master_log_name, 
      User_name, User_password, Ssl_ca, 
      Ssl_capath, Ssl_cert, Ssl_cipher, 
      Ssl_key, Bind, Ignored_server_ids, 
      Uuid, Ssl_crl, Ssl_crlpath, 
      Tls_version)
    values (#{numberOfLines,jdbcType=INTEGER}, #{masterLogPos,jdbcType=BIGINT}, #{host,jdbcType=CHAR}, 
      #{port,jdbcType=INTEGER}, #{connectRetry,jdbcType=INTEGER}, #{enabledSsl,jdbcType=BIT}, 
      #{sslVerifyServerCert,jdbcType=BIT}, #{heartbeat,jdbcType=REAL}, #{retryCount,jdbcType=BIGINT}, 
      #{enabledAutoPosition,jdbcType=BIT}, #{channelName,jdbcType=CHAR}, #{masterLogName,jdbcType=LONGVARCHAR}, 
      #{userName,jdbcType=LONGVARCHAR}, #{userPassword,jdbcType=LONGVARCHAR}, #{sslCa,jdbcType=LONGVARCHAR}, 
      #{sslCapath,jdbcType=LONGVARCHAR}, #{sslCert,jdbcType=LONGVARCHAR}, #{sslCipher,jdbcType=LONGVARCHAR}, 
      #{sslKey,jdbcType=LONGVARCHAR}, #{bind,jdbcType=LONGVARCHAR}, #{ignoredServerIds,jdbcType=LONGVARCHAR}, 
      #{uuid,jdbcType=LONGVARCHAR}, #{sslCrl,jdbcType=LONGVARCHAR}, #{sslCrlpath,jdbcType=LONGVARCHAR}, 
      #{tlsVersion,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.SlaveMasterInfoWithBLOBs" >
    insert into slave_master_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="numberOfLines != null" >
        Number_of_lines,
      </if>
      <if test="masterLogPos != null" >
        Master_log_pos,
      </if>
      <if test="host != null" >
        Host,
      </if>
      <if test="port != null" >
        Port,
      </if>
      <if test="connectRetry != null" >
        Connect_retry,
      </if>
      <if test="enabledSsl != null" >
        Enabled_ssl,
      </if>
      <if test="sslVerifyServerCert != null" >
        Ssl_verify_server_cert,
      </if>
      <if test="heartbeat != null" >
        Heartbeat,
      </if>
      <if test="retryCount != null" >
        Retry_count,
      </if>
      <if test="enabledAutoPosition != null" >
        Enabled_auto_position,
      </if>
      <if test="channelName != null" >
        Channel_name,
      </if>
      <if test="masterLogName != null" >
        Master_log_name,
      </if>
      <if test="userName != null" >
        User_name,
      </if>
      <if test="userPassword != null" >
        User_password,
      </if>
      <if test="sslCa != null" >
        Ssl_ca,
      </if>
      <if test="sslCapath != null" >
        Ssl_capath,
      </if>
      <if test="sslCert != null" >
        Ssl_cert,
      </if>
      <if test="sslCipher != null" >
        Ssl_cipher,
      </if>
      <if test="sslKey != null" >
        Ssl_key,
      </if>
      <if test="bind != null" >
        Bind,
      </if>
      <if test="ignoredServerIds != null" >
        Ignored_server_ids,
      </if>
      <if test="uuid != null" >
        Uuid,
      </if>
      <if test="sslCrl != null" >
        Ssl_crl,
      </if>
      <if test="sslCrlpath != null" >
        Ssl_crlpath,
      </if>
      <if test="tlsVersion != null" >
        Tls_version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="numberOfLines != null" >
        #{numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="masterLogPos != null" >
        #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="host != null" >
        #{host,jdbcType=CHAR},
      </if>
      <if test="port != null" >
        #{port,jdbcType=INTEGER},
      </if>
      <if test="connectRetry != null" >
        #{connectRetry,jdbcType=INTEGER},
      </if>
      <if test="enabledSsl != null" >
        #{enabledSsl,jdbcType=BIT},
      </if>
      <if test="sslVerifyServerCert != null" >
        #{sslVerifyServerCert,jdbcType=BIT},
      </if>
      <if test="heartbeat != null" >
        #{heartbeat,jdbcType=REAL},
      </if>
      <if test="retryCount != null" >
        #{retryCount,jdbcType=BIGINT},
      </if>
      <if test="enabledAutoPosition != null" >
        #{enabledAutoPosition,jdbcType=BIT},
      </if>
      <if test="channelName != null" >
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="masterLogName != null" >
        #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=LONGVARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=LONGVARCHAR},
      </if>
      <if test="sslCa != null" >
        #{sslCa,jdbcType=LONGVARCHAR},
      </if>
      <if test="sslCapath != null" >
        #{sslCapath,jdbcType=LONGVARCHAR},
      </if>
      <if test="sslCert != null" >
        #{sslCert,jdbcType=LONGVARCHAR},
      </if>
      <if test="sslCipher != null" >
        #{sslCipher,jdbcType=LONGVARCHAR},
      </if>
      <if test="sslKey != null" >
        #{sslKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="bind != null" >
        #{bind,jdbcType=LONGVARCHAR},
      </if>
      <if test="ignoredServerIds != null" >
        #{ignoredServerIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=LONGVARCHAR},
      </if>
      <if test="sslCrl != null" >
        #{sslCrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="sslCrlpath != null" >
        #{sslCrlpath,jdbcType=LONGVARCHAR},
      </if>
      <if test="tlsVersion != null" >
        #{tlsVersion,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.SlaveMasterInfoExample" resultType="java.lang.Integer" >
    select count(*) from slave_master_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update slave_master_info
    <set >
      <if test="record.numberOfLines != null" >
        Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      </if>
      <if test="record.masterLogPos != null" >
        Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.host != null" >
        Host = #{record.host,jdbcType=CHAR},
      </if>
      <if test="record.port != null" >
        Port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.connectRetry != null" >
        Connect_retry = #{record.connectRetry,jdbcType=INTEGER},
      </if>
      <if test="record.enabledSsl != null" >
        Enabled_ssl = #{record.enabledSsl,jdbcType=BIT},
      </if>
      <if test="record.sslVerifyServerCert != null" >
        Ssl_verify_server_cert = #{record.sslVerifyServerCert,jdbcType=BIT},
      </if>
      <if test="record.heartbeat != null" >
        Heartbeat = #{record.heartbeat,jdbcType=REAL},
      </if>
      <if test="record.retryCount != null" >
        Retry_count = #{record.retryCount,jdbcType=BIGINT},
      </if>
      <if test="record.enabledAutoPosition != null" >
        Enabled_auto_position = #{record.enabledAutoPosition,jdbcType=BIT},
      </if>
      <if test="record.channelName != null" >
        Channel_name = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.masterLogName != null" >
        Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.userName != null" >
        User_name = #{record.userName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.userPassword != null" >
        User_password = #{record.userPassword,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sslCa != null" >
        Ssl_ca = #{record.sslCa,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sslCapath != null" >
        Ssl_capath = #{record.sslCapath,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sslCert != null" >
        Ssl_cert = #{record.sslCert,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sslCipher != null" >
        Ssl_cipher = #{record.sslCipher,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sslKey != null" >
        Ssl_key = #{record.sslKey,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.bind != null" >
        Bind = #{record.bind,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ignoredServerIds != null" >
        Ignored_server_ids = #{record.ignoredServerIds,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.uuid != null" >
        Uuid = #{record.uuid,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sslCrl != null" >
        Ssl_crl = #{record.sslCrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sslCrlpath != null" >
        Ssl_crlpath = #{record.sslCrlpath,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tlsVersion != null" >
        Tls_version = #{record.tlsVersion,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update slave_master_info
    set Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Host = #{record.host,jdbcType=CHAR},
      Port = #{record.port,jdbcType=INTEGER},
      Connect_retry = #{record.connectRetry,jdbcType=INTEGER},
      Enabled_ssl = #{record.enabledSsl,jdbcType=BIT},
      Ssl_verify_server_cert = #{record.sslVerifyServerCert,jdbcType=BIT},
      Heartbeat = #{record.heartbeat,jdbcType=REAL},
      Retry_count = #{record.retryCount,jdbcType=BIGINT},
      Enabled_auto_position = #{record.enabledAutoPosition,jdbcType=BIT},
      Channel_name = #{record.channelName,jdbcType=CHAR},
      Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR},
      User_name = #{record.userName,jdbcType=LONGVARCHAR},
      User_password = #{record.userPassword,jdbcType=LONGVARCHAR},
      Ssl_ca = #{record.sslCa,jdbcType=LONGVARCHAR},
      Ssl_capath = #{record.sslCapath,jdbcType=LONGVARCHAR},
      Ssl_cert = #{record.sslCert,jdbcType=LONGVARCHAR},
      Ssl_cipher = #{record.sslCipher,jdbcType=LONGVARCHAR},
      Ssl_key = #{record.sslKey,jdbcType=LONGVARCHAR},
      Bind = #{record.bind,jdbcType=LONGVARCHAR},
      Ignored_server_ids = #{record.ignoredServerIds,jdbcType=LONGVARCHAR},
      Uuid = #{record.uuid,jdbcType=LONGVARCHAR},
      Ssl_crl = #{record.sslCrl,jdbcType=LONGVARCHAR},
      Ssl_crlpath = #{record.sslCrlpath,jdbcType=LONGVARCHAR},
      Tls_version = #{record.tlsVersion,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update slave_master_info
    set Number_of_lines = #{record.numberOfLines,jdbcType=INTEGER},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Host = #{record.host,jdbcType=CHAR},
      Port = #{record.port,jdbcType=INTEGER},
      Connect_retry = #{record.connectRetry,jdbcType=INTEGER},
      Enabled_ssl = #{record.enabledSsl,jdbcType=BIT},
      Ssl_verify_server_cert = #{record.sslVerifyServerCert,jdbcType=BIT},
      Heartbeat = #{record.heartbeat,jdbcType=REAL},
      Retry_count = #{record.retryCount,jdbcType=BIGINT},
      Enabled_auto_position = #{record.enabledAutoPosition,jdbcType=BIT},
      Channel_name = #{record.channelName,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>