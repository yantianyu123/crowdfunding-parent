<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.MemoryGlobalByCurrentBytesMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytes" >
    <result column="event_name" property="eventName" jdbcType="VARCHAR" />
    <result column="current_count" property="currentCount" jdbcType="BIGINT" />
    <result column="high_count" property="highCount" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytesWithBLOBs" extends="BaseResultMap" >
    <result column="current_alloc" property="currentAlloc" jdbcType="LONGVARCHAR" />
    <result column="current_avg_alloc" property="currentAvgAlloc" jdbcType="LONGVARCHAR" />
    <result column="high_alloc" property="highAlloc" jdbcType="LONGVARCHAR" />
    <result column="high_avg_alloc" property="highAvgAlloc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    event_name, current_count, high_count
  </sql>
  <sql id="Blob_Column_List" >
    current_alloc, current_avg_alloc, high_alloc, high_avg_alloc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from memory_global_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memory_global_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytesExample" >
    delete from memory_global_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytesWithBLOBs" >
    insert into memory_global_by_current_bytes (event_name, current_count, high_count, 
      current_alloc, current_avg_alloc, 
      high_alloc, high_avg_alloc)
    values (#{eventName,jdbcType=VARCHAR}, #{currentCount,jdbcType=BIGINT}, #{highCount,jdbcType=BIGINT}, 
      #{currentAlloc,jdbcType=LONGVARCHAR}, #{currentAvgAlloc,jdbcType=LONGVARCHAR}, 
      #{highAlloc,jdbcType=LONGVARCHAR}, #{highAvgAlloc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytesWithBLOBs" >
    insert into memory_global_by_current_bytes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventName != null" >
        event_name,
      </if>
      <if test="currentCount != null" >
        current_count,
      </if>
      <if test="highCount != null" >
        high_count,
      </if>
      <if test="currentAlloc != null" >
        current_alloc,
      </if>
      <if test="currentAvgAlloc != null" >
        current_avg_alloc,
      </if>
      <if test="highAlloc != null" >
        high_alloc,
      </if>
      <if test="highAvgAlloc != null" >
        high_avg_alloc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventName != null" >
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="currentCount != null" >
        #{currentCount,jdbcType=BIGINT},
      </if>
      <if test="highCount != null" >
        #{highCount,jdbcType=BIGINT},
      </if>
      <if test="currentAlloc != null" >
        #{currentAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="currentAvgAlloc != null" >
        #{currentAvgAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="highAlloc != null" >
        #{highAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="highAvgAlloc != null" >
        #{highAvgAlloc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.MemoryGlobalByCurrentBytesExample" resultType="java.lang.Integer" >
    select count(*) from memory_global_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update memory_global_by_current_bytes
    <set >
      <if test="record.eventName != null" >
        event_name = #{record.eventName,jdbcType=VARCHAR},
      </if>
      <if test="record.currentCount != null" >
        current_count = #{record.currentCount,jdbcType=BIGINT},
      </if>
      <if test="record.highCount != null" >
        high_count = #{record.highCount,jdbcType=BIGINT},
      </if>
      <if test="record.currentAlloc != null" >
        current_alloc = #{record.currentAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.currentAvgAlloc != null" >
        current_avg_alloc = #{record.currentAvgAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.highAlloc != null" >
        high_alloc = #{record.highAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.highAvgAlloc != null" >
        high_avg_alloc = #{record.highAvgAlloc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update memory_global_by_current_bytes
    set event_name = #{record.eventName,jdbcType=VARCHAR},
      current_count = #{record.currentCount,jdbcType=BIGINT},
      high_count = #{record.highCount,jdbcType=BIGINT},
      current_alloc = #{record.currentAlloc,jdbcType=LONGVARCHAR},
      current_avg_alloc = #{record.currentAvgAlloc,jdbcType=LONGVARCHAR},
      high_alloc = #{record.highAlloc,jdbcType=LONGVARCHAR},
      high_avg_alloc = #{record.highAvgAlloc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update memory_global_by_current_bytes
    set event_name = #{record.eventName,jdbcType=VARCHAR},
      current_count = #{record.currentCount,jdbcType=BIGINT},
      high_count = #{record.highCount,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>