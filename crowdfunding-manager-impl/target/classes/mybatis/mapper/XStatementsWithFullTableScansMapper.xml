<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.XStatementsWithFullTableScansMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.XStatementsWithFullTableScans" >
    <result column="db" property="db" jdbcType="VARCHAR" />
    <result column="exec_count" property="execCount" jdbcType="BIGINT" />
    <result column="total_latency" property="totalLatency" jdbcType="BIGINT" />
    <result column="no_index_used_count" property="noIndexUsedCount" jdbcType="BIGINT" />
    <result column="no_good_index_used_count" property="noGoodIndexUsedCount" jdbcType="BIGINT" />
    <result column="no_index_used_pct" property="noIndexUsedPct" jdbcType="DECIMAL" />
    <result column="rows_sent" property="rowsSent" jdbcType="BIGINT" />
    <result column="rows_examined" property="rowsExamined" jdbcType="BIGINT" />
    <result column="rows_sent_avg" property="rowsSentAvg" jdbcType="DECIMAL" />
    <result column="rows_examined_avg" property="rowsExaminedAvg" jdbcType="DECIMAL" />
    <result column="first_seen" property="firstSeen" jdbcType="TIMESTAMP" />
    <result column="last_seen" property="lastSeen" jdbcType="TIMESTAMP" />
    <result column="digest" property="digest" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.XStatementsWithFullTableScans" extends="BaseResultMap" >
    <result column="query" property="query" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    db, exec_count, total_latency, no_index_used_count, no_good_index_used_count, no_index_used_pct, 
    rows_sent, rows_examined, rows_sent_avg, rows_examined_avg, first_seen, last_seen, 
    digest
  </sql>
  <sql id="Blob_Column_List" >
    query
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.XStatementsWithFullTableScansExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from x$statements_with_full_table_scans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.XStatementsWithFullTableScansExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from x$statements_with_full_table_scans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.XStatementsWithFullTableScansExample" >
    delete from x$statements_with_full_table_scans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.XStatementsWithFullTableScans" >
    insert into x$statements_with_full_table_scans (db, exec_count, total_latency, 
      no_index_used_count, no_good_index_used_count, no_index_used_pct, 
      rows_sent, rows_examined, rows_sent_avg, 
      rows_examined_avg, first_seen, last_seen, 
      digest, query)
    values (#{db,jdbcType=VARCHAR}, #{execCount,jdbcType=BIGINT}, #{totalLatency,jdbcType=BIGINT}, 
      #{noIndexUsedCount,jdbcType=BIGINT}, #{noGoodIndexUsedCount,jdbcType=BIGINT}, #{noIndexUsedPct,jdbcType=DECIMAL}, 
      #{rowsSent,jdbcType=BIGINT}, #{rowsExamined,jdbcType=BIGINT}, #{rowsSentAvg,jdbcType=DECIMAL}, 
      #{rowsExaminedAvg,jdbcType=DECIMAL}, #{firstSeen,jdbcType=TIMESTAMP}, #{lastSeen,jdbcType=TIMESTAMP}, 
      #{digest,jdbcType=VARCHAR}, #{query,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.XStatementsWithFullTableScans" >
    insert into x$statements_with_full_table_scans
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="db != null" >
        db,
      </if>
      <if test="execCount != null" >
        exec_count,
      </if>
      <if test="totalLatency != null" >
        total_latency,
      </if>
      <if test="noIndexUsedCount != null" >
        no_index_used_count,
      </if>
      <if test="noGoodIndexUsedCount != null" >
        no_good_index_used_count,
      </if>
      <if test="noIndexUsedPct != null" >
        no_index_used_pct,
      </if>
      <if test="rowsSent != null" >
        rows_sent,
      </if>
      <if test="rowsExamined != null" >
        rows_examined,
      </if>
      <if test="rowsSentAvg != null" >
        rows_sent_avg,
      </if>
      <if test="rowsExaminedAvg != null" >
        rows_examined_avg,
      </if>
      <if test="firstSeen != null" >
        first_seen,
      </if>
      <if test="lastSeen != null" >
        last_seen,
      </if>
      <if test="digest != null" >
        digest,
      </if>
      <if test="query != null" >
        query,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="db != null" >
        #{db,jdbcType=VARCHAR},
      </if>
      <if test="execCount != null" >
        #{execCount,jdbcType=BIGINT},
      </if>
      <if test="totalLatency != null" >
        #{totalLatency,jdbcType=BIGINT},
      </if>
      <if test="noIndexUsedCount != null" >
        #{noIndexUsedCount,jdbcType=BIGINT},
      </if>
      <if test="noGoodIndexUsedCount != null" >
        #{noGoodIndexUsedCount,jdbcType=BIGINT},
      </if>
      <if test="noIndexUsedPct != null" >
        #{noIndexUsedPct,jdbcType=DECIMAL},
      </if>
      <if test="rowsSent != null" >
        #{rowsSent,jdbcType=BIGINT},
      </if>
      <if test="rowsExamined != null" >
        #{rowsExamined,jdbcType=BIGINT},
      </if>
      <if test="rowsSentAvg != null" >
        #{rowsSentAvg,jdbcType=DECIMAL},
      </if>
      <if test="rowsExaminedAvg != null" >
        #{rowsExaminedAvg,jdbcType=DECIMAL},
      </if>
      <if test="firstSeen != null" >
        #{firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="lastSeen != null" >
        #{lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="digest != null" >
        #{digest,jdbcType=VARCHAR},
      </if>
      <if test="query != null" >
        #{query,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.XStatementsWithFullTableScansExample" resultType="java.lang.Integer" >
    select count(*) from x$statements_with_full_table_scans
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update x$statements_with_full_table_scans
    <set >
      <if test="record.db != null" >
        db = #{record.db,jdbcType=VARCHAR},
      </if>
      <if test="record.execCount != null" >
        exec_count = #{record.execCount,jdbcType=BIGINT},
      </if>
      <if test="record.totalLatency != null" >
        total_latency = #{record.totalLatency,jdbcType=BIGINT},
      </if>
      <if test="record.noIndexUsedCount != null" >
        no_index_used_count = #{record.noIndexUsedCount,jdbcType=BIGINT},
      </if>
      <if test="record.noGoodIndexUsedCount != null" >
        no_good_index_used_count = #{record.noGoodIndexUsedCount,jdbcType=BIGINT},
      </if>
      <if test="record.noIndexUsedPct != null" >
        no_index_used_pct = #{record.noIndexUsedPct,jdbcType=DECIMAL},
      </if>
      <if test="record.rowsSent != null" >
        rows_sent = #{record.rowsSent,jdbcType=BIGINT},
      </if>
      <if test="record.rowsExamined != null" >
        rows_examined = #{record.rowsExamined,jdbcType=BIGINT},
      </if>
      <if test="record.rowsSentAvg != null" >
        rows_sent_avg = #{record.rowsSentAvg,jdbcType=DECIMAL},
      </if>
      <if test="record.rowsExaminedAvg != null" >
        rows_examined_avg = #{record.rowsExaminedAvg,jdbcType=DECIMAL},
      </if>
      <if test="record.firstSeen != null" >
        first_seen = #{record.firstSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastSeen != null" >
        last_seen = #{record.lastSeen,jdbcType=TIMESTAMP},
      </if>
      <if test="record.digest != null" >
        digest = #{record.digest,jdbcType=VARCHAR},
      </if>
      <if test="record.query != null" >
        query = #{record.query,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update x$statements_with_full_table_scans
    set db = #{record.db,jdbcType=VARCHAR},
      exec_count = #{record.execCount,jdbcType=BIGINT},
      total_latency = #{record.totalLatency,jdbcType=BIGINT},
      no_index_used_count = #{record.noIndexUsedCount,jdbcType=BIGINT},
      no_good_index_used_count = #{record.noGoodIndexUsedCount,jdbcType=BIGINT},
      no_index_used_pct = #{record.noIndexUsedPct,jdbcType=DECIMAL},
      rows_sent = #{record.rowsSent,jdbcType=BIGINT},
      rows_examined = #{record.rowsExamined,jdbcType=BIGINT},
      rows_sent_avg = #{record.rowsSentAvg,jdbcType=DECIMAL},
      rows_examined_avg = #{record.rowsExaminedAvg,jdbcType=DECIMAL},
      first_seen = #{record.firstSeen,jdbcType=TIMESTAMP},
      last_seen = #{record.lastSeen,jdbcType=TIMESTAMP},
      digest = #{record.digest,jdbcType=VARCHAR},
      query = #{record.query,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update x$statements_with_full_table_scans
    set db = #{record.db,jdbcType=VARCHAR},
      exec_count = #{record.execCount,jdbcType=BIGINT},
      total_latency = #{record.totalLatency,jdbcType=BIGINT},
      no_index_used_count = #{record.noIndexUsedCount,jdbcType=BIGINT},
      no_good_index_used_count = #{record.noGoodIndexUsedCount,jdbcType=BIGINT},
      no_index_used_pct = #{record.noIndexUsedPct,jdbcType=DECIMAL},
      rows_sent = #{record.rowsSent,jdbcType=BIGINT},
      rows_examined = #{record.rowsExamined,jdbcType=BIGINT},
      rows_sent_avg = #{record.rowsSentAvg,jdbcType=DECIMAL},
      rows_examined_avg = #{record.rowsExaminedAvg,jdbcType=DECIMAL},
      first_seen = #{record.firstSeen,jdbcType=TIMESTAMP},
      last_seen = #{record.lastSeen,jdbcType=TIMESTAMP},
      digest = #{record.digest,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>