<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.EngineCostMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.EngineCost" >
    <result column="engine_name" property="engineName" jdbcType="VARCHAR" />
    <result column="device_type" property="deviceType" jdbcType="INTEGER" />
    <result column="cost_name" property="costName" jdbcType="VARCHAR" />
    <result column="cost_value" property="costValue" jdbcType="REAL" />
    <result column="last_update" property="lastUpdate" jdbcType="TIMESTAMP" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    engine_name, device_type, cost_name, cost_value, last_update, comment
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.EngineCostExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from engine_cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.EngineCostExample" >
    delete from engine_cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.EngineCost" >
    insert into engine_cost (engine_name, device_type, cost_name, 
      cost_value, last_update, comment
      )
    values (#{engineName,jdbcType=VARCHAR}, #{deviceType,jdbcType=INTEGER}, #{costName,jdbcType=VARCHAR}, 
      #{costValue,jdbcType=REAL}, #{lastUpdate,jdbcType=TIMESTAMP}, #{comment,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.EngineCost" >
    insert into engine_cost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="engineName != null" >
        engine_name,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="costName != null" >
        cost_name,
      </if>
      <if test="costValue != null" >
        cost_value,
      </if>
      <if test="lastUpdate != null" >
        last_update,
      </if>
      <if test="comment != null" >
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="engineName != null" >
        #{engineName,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="costName != null" >
        #{costName,jdbcType=VARCHAR},
      </if>
      <if test="costValue != null" >
        #{costValue,jdbcType=REAL},
      </if>
      <if test="lastUpdate != null" >
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.EngineCostExample" resultType="java.lang.Integer" >
    select count(*) from engine_cost
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update engine_cost
    <set >
      <if test="record.engineName != null" >
        engine_name = #{record.engineName,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null" >
        device_type = #{record.deviceType,jdbcType=INTEGER},
      </if>
      <if test="record.costName != null" >
        cost_name = #{record.costName,jdbcType=VARCHAR},
      </if>
      <if test="record.costValue != null" >
        cost_value = #{record.costValue,jdbcType=REAL},
      </if>
      <if test="record.lastUpdate != null" >
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update engine_cost
    set engine_name = #{record.engineName,jdbcType=VARCHAR},
      device_type = #{record.deviceType,jdbcType=INTEGER},
      cost_name = #{record.costName,jdbcType=VARCHAR},
      cost_value = #{record.costValue,jdbcType=REAL},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      comment = #{record.comment,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>