<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.XIoByThreadByLatencyMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.XIoByThreadByLatency" >
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="total" property="total" jdbcType="DECIMAL" />
    <result column="total_latency" property="totalLatency" jdbcType="DECIMAL" />
    <result column="min_latency" property="minLatency" jdbcType="BIGINT" />
    <result column="avg_latency" property="avgLatency" jdbcType="DECIMAL" />
    <result column="max_latency" property="maxLatency" jdbcType="BIGINT" />
    <result column="thread_id" property="threadId" jdbcType="BIGINT" />
    <result column="processlist_id" property="processlistId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user, total, total_latency, min_latency, avg_latency, max_latency, thread_id, processlist_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.XIoByThreadByLatencyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from x$io_by_thread_by_latency
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.XIoByThreadByLatencyExample" >
    delete from x$io_by_thread_by_latency
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.XIoByThreadByLatency" >
    insert into x$io_by_thread_by_latency (user, total, total_latency, 
      min_latency, avg_latency, max_latency, 
      thread_id, processlist_id)
    values (#{user,jdbcType=VARCHAR}, #{total,jdbcType=DECIMAL}, #{totalLatency,jdbcType=DECIMAL}, 
      #{minLatency,jdbcType=BIGINT}, #{avgLatency,jdbcType=DECIMAL}, #{maxLatency,jdbcType=BIGINT}, 
      #{threadId,jdbcType=BIGINT}, #{processlistId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.XIoByThreadByLatency" >
    insert into x$io_by_thread_by_latency
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user != null" >
        user,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="totalLatency != null" >
        total_latency,
      </if>
      <if test="minLatency != null" >
        min_latency,
      </if>
      <if test="avgLatency != null" >
        avg_latency,
      </if>
      <if test="maxLatency != null" >
        max_latency,
      </if>
      <if test="threadId != null" >
        thread_id,
      </if>
      <if test="processlistId != null" >
        processlist_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="totalLatency != null" >
        #{totalLatency,jdbcType=DECIMAL},
      </if>
      <if test="minLatency != null" >
        #{minLatency,jdbcType=BIGINT},
      </if>
      <if test="avgLatency != null" >
        #{avgLatency,jdbcType=DECIMAL},
      </if>
      <if test="maxLatency != null" >
        #{maxLatency,jdbcType=BIGINT},
      </if>
      <if test="threadId != null" >
        #{threadId,jdbcType=BIGINT},
      </if>
      <if test="processlistId != null" >
        #{processlistId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.XIoByThreadByLatencyExample" resultType="java.lang.Integer" >
    select count(*) from x$io_by_thread_by_latency
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update x$io_by_thread_by_latency
    <set >
      <if test="record.user != null" >
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null" >
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.totalLatency != null" >
        total_latency = #{record.totalLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.minLatency != null" >
        min_latency = #{record.minLatency,jdbcType=BIGINT},
      </if>
      <if test="record.avgLatency != null" >
        avg_latency = #{record.avgLatency,jdbcType=DECIMAL},
      </if>
      <if test="record.maxLatency != null" >
        max_latency = #{record.maxLatency,jdbcType=BIGINT},
      </if>
      <if test="record.threadId != null" >
        thread_id = #{record.threadId,jdbcType=BIGINT},
      </if>
      <if test="record.processlistId != null" >
        processlist_id = #{record.processlistId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update x$io_by_thread_by_latency
    set user = #{record.user,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=DECIMAL},
      total_latency = #{record.totalLatency,jdbcType=DECIMAL},
      min_latency = #{record.minLatency,jdbcType=BIGINT},
      avg_latency = #{record.avgLatency,jdbcType=DECIMAL},
      max_latency = #{record.maxLatency,jdbcType=BIGINT},
      thread_id = #{record.threadId,jdbcType=BIGINT},
      processlist_id = #{record.processlistId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>