<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.ViewsMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.Views" >
    <result column="TABLE_CATALOG" property="tableCatalog" jdbcType="VARCHAR" />
    <result column="TABLE_SCHEMA" property="tableSchema" jdbcType="VARCHAR" />
    <result column="TABLE_NAME" property="tableName" jdbcType="VARCHAR" />
    <result column="CHECK_OPTION" property="checkOption" jdbcType="VARCHAR" />
    <result column="IS_UPDATABLE" property="isUpdatable" jdbcType="VARCHAR" />
    <result column="DEFINER" property="definer" jdbcType="VARCHAR" />
    <result column="SECURITY_TYPE" property="securityType" jdbcType="VARCHAR" />
    <result column="CHARACTER_SET_CLIENT" property="characterSetClient" jdbcType="VARCHAR" />
    <result column="COLLATION_CONNECTION" property="collationConnection" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.Views" extends="BaseResultMap" >
    <result column="VIEW_DEFINITION" property="viewDefinition" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, CHECK_OPTION, IS_UPDATABLE, DEFINER, SECURITY_TYPE, 
    CHARACTER_SET_CLIENT, COLLATION_CONNECTION
  </sql>
  <sql id="Blob_Column_List" >
    VIEW_DEFINITION
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.ViewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from VIEWS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.ViewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from VIEWS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.ViewsExample" >
    delete from VIEWS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.Views" >
    insert into VIEWS (TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, 
      CHECK_OPTION, IS_UPDATABLE, DEFINER, 
      SECURITY_TYPE, CHARACTER_SET_CLIENT, COLLATION_CONNECTION, 
      VIEW_DEFINITION)
    values (#{tableCatalog,jdbcType=VARCHAR}, #{tableSchema,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, 
      #{checkOption,jdbcType=VARCHAR}, #{isUpdatable,jdbcType=VARCHAR}, #{definer,jdbcType=VARCHAR}, 
      #{securityType,jdbcType=VARCHAR}, #{characterSetClient,jdbcType=VARCHAR}, #{collationConnection,jdbcType=VARCHAR}, 
      #{viewDefinition,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.Views" >
    insert into VIEWS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tableCatalog != null" >
        TABLE_CATALOG,
      </if>
      <if test="tableSchema != null" >
        TABLE_SCHEMA,
      </if>
      <if test="tableName != null" >
        TABLE_NAME,
      </if>
      <if test="checkOption != null" >
        CHECK_OPTION,
      </if>
      <if test="isUpdatable != null" >
        IS_UPDATABLE,
      </if>
      <if test="definer != null" >
        DEFINER,
      </if>
      <if test="securityType != null" >
        SECURITY_TYPE,
      </if>
      <if test="characterSetClient != null" >
        CHARACTER_SET_CLIENT,
      </if>
      <if test="collationConnection != null" >
        COLLATION_CONNECTION,
      </if>
      <if test="viewDefinition != null" >
        VIEW_DEFINITION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tableCatalog != null" >
        #{tableCatalog,jdbcType=VARCHAR},
      </if>
      <if test="tableSchema != null" >
        #{tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null" >
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="checkOption != null" >
        #{checkOption,jdbcType=VARCHAR},
      </if>
      <if test="isUpdatable != null" >
        #{isUpdatable,jdbcType=VARCHAR},
      </if>
      <if test="definer != null" >
        #{definer,jdbcType=VARCHAR},
      </if>
      <if test="securityType != null" >
        #{securityType,jdbcType=VARCHAR},
      </if>
      <if test="characterSetClient != null" >
        #{characterSetClient,jdbcType=VARCHAR},
      </if>
      <if test="collationConnection != null" >
        #{collationConnection,jdbcType=VARCHAR},
      </if>
      <if test="viewDefinition != null" >
        #{viewDefinition,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.ViewsExample" resultType="java.lang.Integer" >
    select count(*) from VIEWS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update VIEWS
    <set >
      <if test="record.tableCatalog != null" >
        TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.tableSchema != null" >
        TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.tableName != null" >
        TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkOption != null" >
        CHECK_OPTION = #{record.checkOption,jdbcType=VARCHAR},
      </if>
      <if test="record.isUpdatable != null" >
        IS_UPDATABLE = #{record.isUpdatable,jdbcType=VARCHAR},
      </if>
      <if test="record.definer != null" >
        DEFINER = #{record.definer,jdbcType=VARCHAR},
      </if>
      <if test="record.securityType != null" >
        SECURITY_TYPE = #{record.securityType,jdbcType=VARCHAR},
      </if>
      <if test="record.characterSetClient != null" >
        CHARACTER_SET_CLIENT = #{record.characterSetClient,jdbcType=VARCHAR},
      </if>
      <if test="record.collationConnection != null" >
        COLLATION_CONNECTION = #{record.collationConnection,jdbcType=VARCHAR},
      </if>
      <if test="record.viewDefinition != null" >
        VIEW_DEFINITION = #{record.viewDefinition,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update VIEWS
    set TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      CHECK_OPTION = #{record.checkOption,jdbcType=VARCHAR},
      IS_UPDATABLE = #{record.isUpdatable,jdbcType=VARCHAR},
      DEFINER = #{record.definer,jdbcType=VARCHAR},
      SECURITY_TYPE = #{record.securityType,jdbcType=VARCHAR},
      CHARACTER_SET_CLIENT = #{record.characterSetClient,jdbcType=VARCHAR},
      COLLATION_CONNECTION = #{record.collationConnection,jdbcType=VARCHAR},
      VIEW_DEFINITION = #{record.viewDefinition,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update VIEWS
    set TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      CHECK_OPTION = #{record.checkOption,jdbcType=VARCHAR},
      IS_UPDATABLE = #{record.isUpdatable,jdbcType=VARCHAR},
      DEFINER = #{record.definer,jdbcType=VARCHAR},
      SECURITY_TYPE = #{record.securityType,jdbcType=VARCHAR},
      CHARACTER_SET_CLIENT = #{record.characterSetClient,jdbcType=VARCHAR},
      COLLATION_CONNECTION = #{record.collationConnection,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>