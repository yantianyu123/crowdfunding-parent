<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.MemoryByHostByCurrentBytesMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytes" >
    <result column="host" property="host" jdbcType="VARCHAR" />
    <result column="current_count_used" property="currentCountUsed" jdbcType="DECIMAL" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytesWithBLOBs" extends="BaseResultMap" >
    <result column="current_allocated" property="currentAllocated" jdbcType="LONGVARCHAR" />
    <result column="current_avg_alloc" property="currentAvgAlloc" jdbcType="LONGVARCHAR" />
    <result column="current_max_alloc" property="currentMaxAlloc" jdbcType="LONGVARCHAR" />
    <result column="total_allocated" property="totalAllocated" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    host, current_count_used
  </sql>
  <sql id="Blob_Column_List" >
    current_allocated, current_avg_alloc, current_max_alloc, total_allocated
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from memory_by_host_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from memory_by_host_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytesExample" >
    delete from memory_by_host_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytesWithBLOBs" >
    insert into memory_by_host_by_current_bytes (host, current_count_used, current_allocated, 
      current_avg_alloc, current_max_alloc, 
      total_allocated)
    values (#{host,jdbcType=VARCHAR}, #{currentCountUsed,jdbcType=DECIMAL}, #{currentAllocated,jdbcType=LONGVARCHAR}, 
      #{currentAvgAlloc,jdbcType=LONGVARCHAR}, #{currentMaxAlloc,jdbcType=LONGVARCHAR}, 
      #{totalAllocated,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytesWithBLOBs" >
    insert into memory_by_host_by_current_bytes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        host,
      </if>
      <if test="currentCountUsed != null" >
        current_count_used,
      </if>
      <if test="currentAllocated != null" >
        current_allocated,
      </if>
      <if test="currentAvgAlloc != null" >
        current_avg_alloc,
      </if>
      <if test="currentMaxAlloc != null" >
        current_max_alloc,
      </if>
      <if test="totalAllocated != null" >
        total_allocated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="host != null" >
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="currentCountUsed != null" >
        #{currentCountUsed,jdbcType=DECIMAL},
      </if>
      <if test="currentAllocated != null" >
        #{currentAllocated,jdbcType=LONGVARCHAR},
      </if>
      <if test="currentAvgAlloc != null" >
        #{currentAvgAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="currentMaxAlloc != null" >
        #{currentMaxAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="totalAllocated != null" >
        #{totalAllocated,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.MemoryByHostByCurrentBytesExample" resultType="java.lang.Integer" >
    select count(*) from memory_by_host_by_current_bytes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update memory_by_host_by_current_bytes
    <set >
      <if test="record.host != null" >
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.currentCountUsed != null" >
        current_count_used = #{record.currentCountUsed,jdbcType=DECIMAL},
      </if>
      <if test="record.currentAllocated != null" >
        current_allocated = #{record.currentAllocated,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.currentAvgAlloc != null" >
        current_avg_alloc = #{record.currentAvgAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.currentMaxAlloc != null" >
        current_max_alloc = #{record.currentMaxAlloc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.totalAllocated != null" >
        total_allocated = #{record.totalAllocated,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update memory_by_host_by_current_bytes
    set host = #{record.host,jdbcType=VARCHAR},
      current_count_used = #{record.currentCountUsed,jdbcType=DECIMAL},
      current_allocated = #{record.currentAllocated,jdbcType=LONGVARCHAR},
      current_avg_alloc = #{record.currentAvgAlloc,jdbcType=LONGVARCHAR},
      current_max_alloc = #{record.currentMaxAlloc,jdbcType=LONGVARCHAR},
      total_allocated = #{record.totalAllocated,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update memory_by_host_by_current_bytes
    set host = #{record.host,jdbcType=VARCHAR},
      current_count_used = #{record.currentCountUsed,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>