<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.SlaveWorkerInfoMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.SlaveWorkerInfo" >
    <result column="Id" property="id" jdbcType="INTEGER" />
    <result column="Relay_log_pos" property="relayLogPos" jdbcType="BIGINT" />
    <result column="Master_log_pos" property="masterLogPos" jdbcType="BIGINT" />
    <result column="Checkpoint_relay_log_pos" property="checkpointRelayLogPos" jdbcType="BIGINT" />
    <result column="Checkpoint_master_log_pos" property="checkpointMasterLogPos" jdbcType="BIGINT" />
    <result column="Checkpoint_seqno" property="checkpointSeqno" jdbcType="INTEGER" />
    <result column="Checkpoint_group_size" property="checkpointGroupSize" jdbcType="INTEGER" />
    <result column="Channel_name" property="channelName" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.SlaveWorkerInfoWithBLOBs" extends="BaseResultMap" >
    <result column="Relay_log_name" property="relayLogName" jdbcType="LONGVARCHAR" />
    <result column="Master_log_name" property="masterLogName" jdbcType="LONGVARCHAR" />
    <result column="Checkpoint_relay_log_name" property="checkpointRelayLogName" jdbcType="LONGVARCHAR" />
    <result column="Checkpoint_master_log_name" property="checkpointMasterLogName" jdbcType="LONGVARCHAR" />
    <result column="Checkpoint_group_bitmap" property="checkpointGroupBitmap" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, Relay_log_pos, Master_log_pos, Checkpoint_relay_log_pos, Checkpoint_master_log_pos, 
    Checkpoint_seqno, Checkpoint_group_size, Channel_name
  </sql>
  <sql id="Blob_Column_List" >
    Relay_log_name, Master_log_name, Checkpoint_relay_log_name, Checkpoint_master_log_name, 
    Checkpoint_group_bitmap
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.SlaveWorkerInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from slave_worker_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.SlaveWorkerInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slave_worker_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.SlaveWorkerInfoExample" >
    delete from slave_worker_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.SlaveWorkerInfoWithBLOBs" >
    insert into slave_worker_info (Id, Relay_log_pos, Master_log_pos, 
      Checkpoint_relay_log_pos, Checkpoint_master_log_pos, 
      Checkpoint_seqno, Checkpoint_group_size, Channel_name, 
      Relay_log_name, Master_log_name, Checkpoint_relay_log_name, 
      Checkpoint_master_log_name, Checkpoint_group_bitmap
      )
    values (#{id,jdbcType=INTEGER}, #{relayLogPos,jdbcType=BIGINT}, #{masterLogPos,jdbcType=BIGINT}, 
      #{checkpointRelayLogPos,jdbcType=BIGINT}, #{checkpointMasterLogPos,jdbcType=BIGINT}, 
      #{checkpointSeqno,jdbcType=INTEGER}, #{checkpointGroupSize,jdbcType=INTEGER}, #{channelName,jdbcType=CHAR}, 
      #{relayLogName,jdbcType=LONGVARCHAR}, #{masterLogName,jdbcType=LONGVARCHAR}, #{checkpointRelayLogName,jdbcType=LONGVARCHAR}, 
      #{checkpointMasterLogName,jdbcType=LONGVARCHAR}, #{checkpointGroupBitmap,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.SlaveWorkerInfoWithBLOBs" >
    insert into slave_worker_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="relayLogPos != null" >
        Relay_log_pos,
      </if>
      <if test="masterLogPos != null" >
        Master_log_pos,
      </if>
      <if test="checkpointRelayLogPos != null" >
        Checkpoint_relay_log_pos,
      </if>
      <if test="checkpointMasterLogPos != null" >
        Checkpoint_master_log_pos,
      </if>
      <if test="checkpointSeqno != null" >
        Checkpoint_seqno,
      </if>
      <if test="checkpointGroupSize != null" >
        Checkpoint_group_size,
      </if>
      <if test="channelName != null" >
        Channel_name,
      </if>
      <if test="relayLogName != null" >
        Relay_log_name,
      </if>
      <if test="masterLogName != null" >
        Master_log_name,
      </if>
      <if test="checkpointRelayLogName != null" >
        Checkpoint_relay_log_name,
      </if>
      <if test="checkpointMasterLogName != null" >
        Checkpoint_master_log_name,
      </if>
      <if test="checkpointGroupBitmap != null" >
        Checkpoint_group_bitmap,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="relayLogPos != null" >
        #{relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="masterLogPos != null" >
        #{masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointRelayLogPos != null" >
        #{checkpointRelayLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointMasterLogPos != null" >
        #{checkpointMasterLogPos,jdbcType=BIGINT},
      </if>
      <if test="checkpointSeqno != null" >
        #{checkpointSeqno,jdbcType=INTEGER},
      </if>
      <if test="checkpointGroupSize != null" >
        #{checkpointGroupSize,jdbcType=INTEGER},
      </if>
      <if test="channelName != null" >
        #{channelName,jdbcType=CHAR},
      </if>
      <if test="relayLogName != null" >
        #{relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="masterLogName != null" >
        #{masterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointRelayLogName != null" >
        #{checkpointRelayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointMasterLogName != null" >
        #{checkpointMasterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="checkpointGroupBitmap != null" >
        #{checkpointGroupBitmap,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.SlaveWorkerInfoExample" resultType="java.lang.Integer" >
    select count(*) from slave_worker_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update slave_worker_info
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.relayLogPos != null" >
        Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.masterLogPos != null" >
        Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.checkpointRelayLogPos != null" >
        Checkpoint_relay_log_pos = #{record.checkpointRelayLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.checkpointMasterLogPos != null" >
        Checkpoint_master_log_pos = #{record.checkpointMasterLogPos,jdbcType=BIGINT},
      </if>
      <if test="record.checkpointSeqno != null" >
        Checkpoint_seqno = #{record.checkpointSeqno,jdbcType=INTEGER},
      </if>
      <if test="record.checkpointGroupSize != null" >
        Checkpoint_group_size = #{record.checkpointGroupSize,jdbcType=INTEGER},
      </if>
      <if test="record.channelName != null" >
        Channel_name = #{record.channelName,jdbcType=CHAR},
      </if>
      <if test="record.relayLogName != null" >
        Relay_log_name = #{record.relayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.masterLogName != null" >
        Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.checkpointRelayLogName != null" >
        Checkpoint_relay_log_name = #{record.checkpointRelayLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.checkpointMasterLogName != null" >
        Checkpoint_master_log_name = #{record.checkpointMasterLogName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.checkpointGroupBitmap != null" >
        Checkpoint_group_bitmap = #{record.checkpointGroupBitmap,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update slave_worker_info
    set Id = #{record.id,jdbcType=INTEGER},
      Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Checkpoint_relay_log_pos = #{record.checkpointRelayLogPos,jdbcType=BIGINT},
      Checkpoint_master_log_pos = #{record.checkpointMasterLogPos,jdbcType=BIGINT},
      Checkpoint_seqno = #{record.checkpointSeqno,jdbcType=INTEGER},
      Checkpoint_group_size = #{record.checkpointGroupSize,jdbcType=INTEGER},
      Channel_name = #{record.channelName,jdbcType=CHAR},
      Relay_log_name = #{record.relayLogName,jdbcType=LONGVARCHAR},
      Master_log_name = #{record.masterLogName,jdbcType=LONGVARCHAR},
      Checkpoint_relay_log_name = #{record.checkpointRelayLogName,jdbcType=LONGVARCHAR},
      Checkpoint_master_log_name = #{record.checkpointMasterLogName,jdbcType=LONGVARCHAR},
      Checkpoint_group_bitmap = #{record.checkpointGroupBitmap,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update slave_worker_info
    set Id = #{record.id,jdbcType=INTEGER},
      Relay_log_pos = #{record.relayLogPos,jdbcType=BIGINT},
      Master_log_pos = #{record.masterLogPos,jdbcType=BIGINT},
      Checkpoint_relay_log_pos = #{record.checkpointRelayLogPos,jdbcType=BIGINT},
      Checkpoint_master_log_pos = #{record.checkpointMasterLogPos,jdbcType=BIGINT},
      Checkpoint_seqno = #{record.checkpointSeqno,jdbcType=INTEGER},
      Checkpoint_group_size = #{record.checkpointGroupSize,jdbcType=INTEGER},
      Channel_name = #{record.channelName,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>