<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.XSessionMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.XSession" >
    <result column="thd_id" property="thdId" jdbcType="BIGINT" />
    <result column="conn_id" property="connId" jdbcType="BIGINT" />
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="db" property="db" jdbcType="VARCHAR" />
    <result column="command" property="command" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="BIGINT" />
    <result column="statement_latency" property="statementLatency" jdbcType="BIGINT" />
    <result column="progress" property="progress" jdbcType="DECIMAL" />
    <result column="lock_latency" property="lockLatency" jdbcType="BIGINT" />
    <result column="rows_examined" property="rowsExamined" jdbcType="BIGINT" />
    <result column="rows_sent" property="rowsSent" jdbcType="BIGINT" />
    <result column="rows_affected" property="rowsAffected" jdbcType="BIGINT" />
    <result column="tmp_tables" property="tmpTables" jdbcType="BIGINT" />
    <result column="tmp_disk_tables" property="tmpDiskTables" jdbcType="BIGINT" />
    <result column="full_scan" property="fullScan" jdbcType="VARCHAR" />
    <result column="last_statement_latency" property="lastStatementLatency" jdbcType="BIGINT" />
    <result column="current_memory" property="currentMemory" jdbcType="DECIMAL" />
    <result column="last_wait" property="lastWait" jdbcType="VARCHAR" />
    <result column="last_wait_latency" property="lastWaitLatency" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="trx_latency" property="trxLatency" jdbcType="BIGINT" />
    <result column="trx_state" property="trxState" jdbcType="CHAR" />
    <result column="trx_autocommit" property="trxAutocommit" jdbcType="CHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="program_name" property="programName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.XSessionWithBLOBs" extends="BaseResultMap" >
    <result column="current_statement" property="currentStatement" jdbcType="LONGVARCHAR" />
    <result column="last_statement" property="lastStatement" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    thd_id, conn_id, user, db, command, state, time, statement_latency, progress, lock_latency, 
    rows_examined, rows_sent, rows_affected, tmp_tables, tmp_disk_tables, full_scan, 
    last_statement_latency, current_memory, last_wait, last_wait_latency, source, trx_latency, 
    trx_state, trx_autocommit, pid, program_name
  </sql>
  <sql id="Blob_Column_List" >
    current_statement, last_statement
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.XSessionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from x$session
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.XSessionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from x$session
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.XSessionExample" >
    delete from x$session
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.XSessionWithBLOBs" >
    insert into x$session (thd_id, conn_id, user, 
      db, command, state, 
      time, statement_latency, progress, 
      lock_latency, rows_examined, rows_sent, 
      rows_affected, tmp_tables, tmp_disk_tables, 
      full_scan, last_statement_latency, current_memory, 
      last_wait, last_wait_latency, source, 
      trx_latency, trx_state, trx_autocommit, 
      pid, program_name, current_statement, 
      last_statement)
    values (#{thdId,jdbcType=BIGINT}, #{connId,jdbcType=BIGINT}, #{user,jdbcType=VARCHAR}, 
      #{db,jdbcType=VARCHAR}, #{command,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{time,jdbcType=BIGINT}, #{statementLatency,jdbcType=BIGINT}, #{progress,jdbcType=DECIMAL}, 
      #{lockLatency,jdbcType=BIGINT}, #{rowsExamined,jdbcType=BIGINT}, #{rowsSent,jdbcType=BIGINT}, 
      #{rowsAffected,jdbcType=BIGINT}, #{tmpTables,jdbcType=BIGINT}, #{tmpDiskTables,jdbcType=BIGINT}, 
      #{fullScan,jdbcType=VARCHAR}, #{lastStatementLatency,jdbcType=BIGINT}, #{currentMemory,jdbcType=DECIMAL}, 
      #{lastWait,jdbcType=VARCHAR}, #{lastWaitLatency,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{trxLatency,jdbcType=BIGINT}, #{trxState,jdbcType=CHAR}, #{trxAutocommit,jdbcType=CHAR}, 
      #{pid,jdbcType=VARCHAR}, #{programName,jdbcType=VARCHAR}, #{currentStatement,jdbcType=LONGVARCHAR}, 
      #{lastStatement,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.XSessionWithBLOBs" >
    insert into x$session
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="thdId != null" >
        thd_id,
      </if>
      <if test="connId != null" >
        conn_id,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="db != null" >
        db,
      </if>
      <if test="command != null" >
        command,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="statementLatency != null" >
        statement_latency,
      </if>
      <if test="progress != null" >
        progress,
      </if>
      <if test="lockLatency != null" >
        lock_latency,
      </if>
      <if test="rowsExamined != null" >
        rows_examined,
      </if>
      <if test="rowsSent != null" >
        rows_sent,
      </if>
      <if test="rowsAffected != null" >
        rows_affected,
      </if>
      <if test="tmpTables != null" >
        tmp_tables,
      </if>
      <if test="tmpDiskTables != null" >
        tmp_disk_tables,
      </if>
      <if test="fullScan != null" >
        full_scan,
      </if>
      <if test="lastStatementLatency != null" >
        last_statement_latency,
      </if>
      <if test="currentMemory != null" >
        current_memory,
      </if>
      <if test="lastWait != null" >
        last_wait,
      </if>
      <if test="lastWaitLatency != null" >
        last_wait_latency,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="trxLatency != null" >
        trx_latency,
      </if>
      <if test="trxState != null" >
        trx_state,
      </if>
      <if test="trxAutocommit != null" >
        trx_autocommit,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="programName != null" >
        program_name,
      </if>
      <if test="currentStatement != null" >
        current_statement,
      </if>
      <if test="lastStatement != null" >
        last_statement,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="thdId != null" >
        #{thdId,jdbcType=BIGINT},
      </if>
      <if test="connId != null" >
        #{connId,jdbcType=BIGINT},
      </if>
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="db != null" >
        #{db,jdbcType=VARCHAR},
      </if>
      <if test="command != null" >
        #{command,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=BIGINT},
      </if>
      <if test="statementLatency != null" >
        #{statementLatency,jdbcType=BIGINT},
      </if>
      <if test="progress != null" >
        #{progress,jdbcType=DECIMAL},
      </if>
      <if test="lockLatency != null" >
        #{lockLatency,jdbcType=BIGINT},
      </if>
      <if test="rowsExamined != null" >
        #{rowsExamined,jdbcType=BIGINT},
      </if>
      <if test="rowsSent != null" >
        #{rowsSent,jdbcType=BIGINT},
      </if>
      <if test="rowsAffected != null" >
        #{rowsAffected,jdbcType=BIGINT},
      </if>
      <if test="tmpTables != null" >
        #{tmpTables,jdbcType=BIGINT},
      </if>
      <if test="tmpDiskTables != null" >
        #{tmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="fullScan != null" >
        #{fullScan,jdbcType=VARCHAR},
      </if>
      <if test="lastStatementLatency != null" >
        #{lastStatementLatency,jdbcType=BIGINT},
      </if>
      <if test="currentMemory != null" >
        #{currentMemory,jdbcType=DECIMAL},
      </if>
      <if test="lastWait != null" >
        #{lastWait,jdbcType=VARCHAR},
      </if>
      <if test="lastWaitLatency != null" >
        #{lastWaitLatency,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="trxLatency != null" >
        #{trxLatency,jdbcType=BIGINT},
      </if>
      <if test="trxState != null" >
        #{trxState,jdbcType=CHAR},
      </if>
      <if test="trxAutocommit != null" >
        #{trxAutocommit,jdbcType=CHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="programName != null" >
        #{programName,jdbcType=VARCHAR},
      </if>
      <if test="currentStatement != null" >
        #{currentStatement,jdbcType=LONGVARCHAR},
      </if>
      <if test="lastStatement != null" >
        #{lastStatement,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.XSessionExample" resultType="java.lang.Integer" >
    select count(*) from x$session
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update x$session
    <set >
      <if test="record.thdId != null" >
        thd_id = #{record.thdId,jdbcType=BIGINT},
      </if>
      <if test="record.connId != null" >
        conn_id = #{record.connId,jdbcType=BIGINT},
      </if>
      <if test="record.user != null" >
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.db != null" >
        db = #{record.db,jdbcType=VARCHAR},
      </if>
      <if test="record.command != null" >
        command = #{record.command,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.statementLatency != null" >
        statement_latency = #{record.statementLatency,jdbcType=BIGINT},
      </if>
      <if test="record.progress != null" >
        progress = #{record.progress,jdbcType=DECIMAL},
      </if>
      <if test="record.lockLatency != null" >
        lock_latency = #{record.lockLatency,jdbcType=BIGINT},
      </if>
      <if test="record.rowsExamined != null" >
        rows_examined = #{record.rowsExamined,jdbcType=BIGINT},
      </if>
      <if test="record.rowsSent != null" >
        rows_sent = #{record.rowsSent,jdbcType=BIGINT},
      </if>
      <if test="record.rowsAffected != null" >
        rows_affected = #{record.rowsAffected,jdbcType=BIGINT},
      </if>
      <if test="record.tmpTables != null" >
        tmp_tables = #{record.tmpTables,jdbcType=BIGINT},
      </if>
      <if test="record.tmpDiskTables != null" >
        tmp_disk_tables = #{record.tmpDiskTables,jdbcType=BIGINT},
      </if>
      <if test="record.fullScan != null" >
        full_scan = #{record.fullScan,jdbcType=VARCHAR},
      </if>
      <if test="record.lastStatementLatency != null" >
        last_statement_latency = #{record.lastStatementLatency,jdbcType=BIGINT},
      </if>
      <if test="record.currentMemory != null" >
        current_memory = #{record.currentMemory,jdbcType=DECIMAL},
      </if>
      <if test="record.lastWait != null" >
        last_wait = #{record.lastWait,jdbcType=VARCHAR},
      </if>
      <if test="record.lastWaitLatency != null" >
        last_wait_latency = #{record.lastWaitLatency,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.trxLatency != null" >
        trx_latency = #{record.trxLatency,jdbcType=BIGINT},
      </if>
      <if test="record.trxState != null" >
        trx_state = #{record.trxState,jdbcType=CHAR},
      </if>
      <if test="record.trxAutocommit != null" >
        trx_autocommit = #{record.trxAutocommit,jdbcType=CHAR},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=VARCHAR},
      </if>
      <if test="record.programName != null" >
        program_name = #{record.programName,jdbcType=VARCHAR},
      </if>
      <if test="record.currentStatement != null" >
        current_statement = #{record.currentStatement,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.lastStatement != null" >
        last_statement = #{record.lastStatement,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update x$session
    set thd_id = #{record.thdId,jdbcType=BIGINT},
      conn_id = #{record.connId,jdbcType=BIGINT},
      user = #{record.user,jdbcType=VARCHAR},
      db = #{record.db,jdbcType=VARCHAR},
      command = #{record.command,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      statement_latency = #{record.statementLatency,jdbcType=BIGINT},
      progress = #{record.progress,jdbcType=DECIMAL},
      lock_latency = #{record.lockLatency,jdbcType=BIGINT},
      rows_examined = #{record.rowsExamined,jdbcType=BIGINT},
      rows_sent = #{record.rowsSent,jdbcType=BIGINT},
      rows_affected = #{record.rowsAffected,jdbcType=BIGINT},
      tmp_tables = #{record.tmpTables,jdbcType=BIGINT},
      tmp_disk_tables = #{record.tmpDiskTables,jdbcType=BIGINT},
      full_scan = #{record.fullScan,jdbcType=VARCHAR},
      last_statement_latency = #{record.lastStatementLatency,jdbcType=BIGINT},
      current_memory = #{record.currentMemory,jdbcType=DECIMAL},
      last_wait = #{record.lastWait,jdbcType=VARCHAR},
      last_wait_latency = #{record.lastWaitLatency,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      trx_latency = #{record.trxLatency,jdbcType=BIGINT},
      trx_state = #{record.trxState,jdbcType=CHAR},
      trx_autocommit = #{record.trxAutocommit,jdbcType=CHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      program_name = #{record.programName,jdbcType=VARCHAR},
      current_statement = #{record.currentStatement,jdbcType=LONGVARCHAR},
      last_statement = #{record.lastStatement,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update x$session
    set thd_id = #{record.thdId,jdbcType=BIGINT},
      conn_id = #{record.connId,jdbcType=BIGINT},
      user = #{record.user,jdbcType=VARCHAR},
      db = #{record.db,jdbcType=VARCHAR},
      command = #{record.command,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      statement_latency = #{record.statementLatency,jdbcType=BIGINT},
      progress = #{record.progress,jdbcType=DECIMAL},
      lock_latency = #{record.lockLatency,jdbcType=BIGINT},
      rows_examined = #{record.rowsExamined,jdbcType=BIGINT},
      rows_sent = #{record.rowsSent,jdbcType=BIGINT},
      rows_affected = #{record.rowsAffected,jdbcType=BIGINT},
      tmp_tables = #{record.tmpTables,jdbcType=BIGINT},
      tmp_disk_tables = #{record.tmpDiskTables,jdbcType=BIGINT},
      full_scan = #{record.fullScan,jdbcType=VARCHAR},
      last_statement_latency = #{record.lastStatementLatency,jdbcType=BIGINT},
      current_memory = #{record.currentMemory,jdbcType=DECIMAL},
      last_wait = #{record.lastWait,jdbcType=VARCHAR},
      last_wait_latency = #{record.lastWaitLatency,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      trx_latency = #{record.trxLatency,jdbcType=BIGINT},
      trx_state = #{record.trxState,jdbcType=CHAR},
      trx_autocommit = #{record.trxAutocommit,jdbcType=CHAR},
      pid = #{record.pid,jdbcType=VARCHAR},
      program_name = #{record.programName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>