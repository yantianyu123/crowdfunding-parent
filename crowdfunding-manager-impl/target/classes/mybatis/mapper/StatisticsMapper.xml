<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.StatisticsMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.Statistics" >
    <result column="TABLE_CATALOG" property="tableCatalog" jdbcType="VARCHAR" />
    <result column="TABLE_SCHEMA" property="tableSchema" jdbcType="VARCHAR" />
    <result column="TABLE_NAME" property="tableName" jdbcType="VARCHAR" />
    <result column="NON_UNIQUE" property="nonUnique" jdbcType="BIGINT" />
    <result column="INDEX_SCHEMA" property="indexSchema" jdbcType="VARCHAR" />
    <result column="INDEX_NAME" property="indexName" jdbcType="VARCHAR" />
    <result column="SEQ_IN_INDEX" property="seqInIndex" jdbcType="BIGINT" />
    <result column="COLUMN_NAME" property="columnName" jdbcType="VARCHAR" />
    <result column="COLLATION" property="collation" jdbcType="VARCHAR" />
    <result column="CARDINALITY" property="cardinality" jdbcType="BIGINT" />
    <result column="SUB_PART" property="subPart" jdbcType="BIGINT" />
    <result column="PACKED" property="packed" jdbcType="VARCHAR" />
    <result column="NULLABLE" property="nullable" jdbcType="VARCHAR" />
    <result column="INDEX_TYPE" property="indexType" jdbcType="VARCHAR" />
    <result column="COMMENT" property="comment" jdbcType="VARCHAR" />
    <result column="INDEX_COMMENT" property="indexComment" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, NON_UNIQUE, INDEX_SCHEMA, INDEX_NAME, SEQ_IN_INDEX, 
    COLUMN_NAME, COLLATION, CARDINALITY, SUB_PART, PACKED, NULLABLE, INDEX_TYPE, COMMENT, 
    INDEX_COMMENT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.StatisticsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from STATISTICS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.StatisticsExample" >
    delete from STATISTICS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.Statistics" >
    insert into STATISTICS (TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, 
      NON_UNIQUE, INDEX_SCHEMA, INDEX_NAME, 
      SEQ_IN_INDEX, COLUMN_NAME, COLLATION, 
      CARDINALITY, SUB_PART, PACKED, 
      NULLABLE, INDEX_TYPE, COMMENT, 
      INDEX_COMMENT)
    values (#{tableCatalog,jdbcType=VARCHAR}, #{tableSchema,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, 
      #{nonUnique,jdbcType=BIGINT}, #{indexSchema,jdbcType=VARCHAR}, #{indexName,jdbcType=VARCHAR}, 
      #{seqInIndex,jdbcType=BIGINT}, #{columnName,jdbcType=VARCHAR}, #{collation,jdbcType=VARCHAR}, 
      #{cardinality,jdbcType=BIGINT}, #{subPart,jdbcType=BIGINT}, #{packed,jdbcType=VARCHAR}, 
      #{nullable,jdbcType=VARCHAR}, #{indexType,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{indexComment,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.Statistics" >
    insert into STATISTICS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tableCatalog != null" >
        TABLE_CATALOG,
      </if>
      <if test="tableSchema != null" >
        TABLE_SCHEMA,
      </if>
      <if test="tableName != null" >
        TABLE_NAME,
      </if>
      <if test="nonUnique != null" >
        NON_UNIQUE,
      </if>
      <if test="indexSchema != null" >
        INDEX_SCHEMA,
      </if>
      <if test="indexName != null" >
        INDEX_NAME,
      </if>
      <if test="seqInIndex != null" >
        SEQ_IN_INDEX,
      </if>
      <if test="columnName != null" >
        COLUMN_NAME,
      </if>
      <if test="collation != null" >
        COLLATION,
      </if>
      <if test="cardinality != null" >
        CARDINALITY,
      </if>
      <if test="subPart != null" >
        SUB_PART,
      </if>
      <if test="packed != null" >
        PACKED,
      </if>
      <if test="nullable != null" >
        NULLABLE,
      </if>
      <if test="indexType != null" >
        INDEX_TYPE,
      </if>
      <if test="comment != null" >
        COMMENT,
      </if>
      <if test="indexComment != null" >
        INDEX_COMMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tableCatalog != null" >
        #{tableCatalog,jdbcType=VARCHAR},
      </if>
      <if test="tableSchema != null" >
        #{tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null" >
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="nonUnique != null" >
        #{nonUnique,jdbcType=BIGINT},
      </if>
      <if test="indexSchema != null" >
        #{indexSchema,jdbcType=VARCHAR},
      </if>
      <if test="indexName != null" >
        #{indexName,jdbcType=VARCHAR},
      </if>
      <if test="seqInIndex != null" >
        #{seqInIndex,jdbcType=BIGINT},
      </if>
      <if test="columnName != null" >
        #{columnName,jdbcType=VARCHAR},
      </if>
      <if test="collation != null" >
        #{collation,jdbcType=VARCHAR},
      </if>
      <if test="cardinality != null" >
        #{cardinality,jdbcType=BIGINT},
      </if>
      <if test="subPart != null" >
        #{subPart,jdbcType=BIGINT},
      </if>
      <if test="packed != null" >
        #{packed,jdbcType=VARCHAR},
      </if>
      <if test="nullable != null" >
        #{nullable,jdbcType=VARCHAR},
      </if>
      <if test="indexType != null" >
        #{indexType,jdbcType=VARCHAR},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="indexComment != null" >
        #{indexComment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.StatisticsExample" resultType="java.lang.Integer" >
    select count(*) from STATISTICS
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update STATISTICS
    <set >
      <if test="record.tableCatalog != null" >
        TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      </if>
      <if test="record.tableSchema != null" >
        TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.tableName != null" >
        TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      </if>
      <if test="record.nonUnique != null" >
        NON_UNIQUE = #{record.nonUnique,jdbcType=BIGINT},
      </if>
      <if test="record.indexSchema != null" >
        INDEX_SCHEMA = #{record.indexSchema,jdbcType=VARCHAR},
      </if>
      <if test="record.indexName != null" >
        INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
      </if>
      <if test="record.seqInIndex != null" >
        SEQ_IN_INDEX = #{record.seqInIndex,jdbcType=BIGINT},
      </if>
      <if test="record.columnName != null" >
        COLUMN_NAME = #{record.columnName,jdbcType=VARCHAR},
      </if>
      <if test="record.collation != null" >
        COLLATION = #{record.collation,jdbcType=VARCHAR},
      </if>
      <if test="record.cardinality != null" >
        CARDINALITY = #{record.cardinality,jdbcType=BIGINT},
      </if>
      <if test="record.subPart != null" >
        SUB_PART = #{record.subPart,jdbcType=BIGINT},
      </if>
      <if test="record.packed != null" >
        PACKED = #{record.packed,jdbcType=VARCHAR},
      </if>
      <if test="record.nullable != null" >
        NULLABLE = #{record.nullable,jdbcType=VARCHAR},
      </if>
      <if test="record.indexType != null" >
        INDEX_TYPE = #{record.indexType,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null" >
        COMMENT = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.indexComment != null" >
        INDEX_COMMENT = #{record.indexComment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update STATISTICS
    set TABLE_CATALOG = #{record.tableCatalog,jdbcType=VARCHAR},
      TABLE_SCHEMA = #{record.tableSchema,jdbcType=VARCHAR},
      TABLE_NAME = #{record.tableName,jdbcType=VARCHAR},
      NON_UNIQUE = #{record.nonUnique,jdbcType=BIGINT},
      INDEX_SCHEMA = #{record.indexSchema,jdbcType=VARCHAR},
      INDEX_NAME = #{record.indexName,jdbcType=VARCHAR},
      SEQ_IN_INDEX = #{record.seqInIndex,jdbcType=BIGINT},
      COLUMN_NAME = #{record.columnName,jdbcType=VARCHAR},
      COLLATION = #{record.collation,jdbcType=VARCHAR},
      CARDINALITY = #{record.cardinality,jdbcType=BIGINT},
      SUB_PART = #{record.subPart,jdbcType=BIGINT},
      PACKED = #{record.packed,jdbcType=VARCHAR},
      NULLABLE = #{record.nullable,jdbcType=VARCHAR},
      INDEX_TYPE = #{record.indexType,jdbcType=VARCHAR},
      COMMENT = #{record.comment,jdbcType=VARCHAR},
      INDEX_COMMENT = #{record.indexComment,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>