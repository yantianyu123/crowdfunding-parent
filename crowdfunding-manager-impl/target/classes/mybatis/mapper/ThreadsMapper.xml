<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yan.crowdfunding.mapper.ThreadsMapper" >
  <resultMap id="BaseResultMap" type="com.yan.crowdfunding.entity.Threads" >
    <result column="THREAD_ID" property="threadId" jdbcType="BIGINT" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="PROCESSLIST_ID" property="processlistId" jdbcType="BIGINT" />
    <result column="PROCESSLIST_USER" property="processlistUser" jdbcType="VARCHAR" />
    <result column="PROCESSLIST_HOST" property="processlistHost" jdbcType="VARCHAR" />
    <result column="PROCESSLIST_DB" property="processlistDb" jdbcType="VARCHAR" />
    <result column="PROCESSLIST_COMMAND" property="processlistCommand" jdbcType="VARCHAR" />
    <result column="PROCESSLIST_TIME" property="processlistTime" jdbcType="BIGINT" />
    <result column="PROCESSLIST_STATE" property="processlistState" jdbcType="VARCHAR" />
    <result column="PARENT_THREAD_ID" property="parentThreadId" jdbcType="BIGINT" />
    <result column="ROLE" property="role" jdbcType="VARCHAR" />
    <result column="INSTRUMENTED" property="instrumented" jdbcType="CHAR" />
    <result column="HISTORY" property="history" jdbcType="CHAR" />
    <result column="CONNECTION_TYPE" property="connectionType" jdbcType="VARCHAR" />
    <result column="THREAD_OS_ID" property="threadOsId" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yan.crowdfunding.entity.Threads" extends="BaseResultMap" >
    <result column="PROCESSLIST_INFO" property="processlistInfo" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    THREAD_ID, NAME, TYPE, PROCESSLIST_ID, PROCESSLIST_USER, PROCESSLIST_HOST, PROCESSLIST_DB, 
    PROCESSLIST_COMMAND, PROCESSLIST_TIME, PROCESSLIST_STATE, PARENT_THREAD_ID, ROLE, 
    INSTRUMENTED, HISTORY, CONNECTION_TYPE, THREAD_OS_ID
  </sql>
  <sql id="Blob_Column_List" >
    PROCESSLIST_INFO
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yan.crowdfunding.entity.ThreadsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from threads
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yan.crowdfunding.entity.ThreadsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from threads
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yan.crowdfunding.entity.ThreadsExample" >
    delete from threads
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yan.crowdfunding.entity.Threads" >
    insert into threads (THREAD_ID, NAME, TYPE, 
      PROCESSLIST_ID, PROCESSLIST_USER, PROCESSLIST_HOST, 
      PROCESSLIST_DB, PROCESSLIST_COMMAND, PROCESSLIST_TIME, 
      PROCESSLIST_STATE, PARENT_THREAD_ID, ROLE, 
      INSTRUMENTED, HISTORY, CONNECTION_TYPE, 
      THREAD_OS_ID, PROCESSLIST_INFO)
    values (#{threadId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{processlistId,jdbcType=BIGINT}, #{processlistUser,jdbcType=VARCHAR}, #{processlistHost,jdbcType=VARCHAR}, 
      #{processlistDb,jdbcType=VARCHAR}, #{processlistCommand,jdbcType=VARCHAR}, #{processlistTime,jdbcType=BIGINT}, 
      #{processlistState,jdbcType=VARCHAR}, #{parentThreadId,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, 
      #{instrumented,jdbcType=CHAR}, #{history,jdbcType=CHAR}, #{connectionType,jdbcType=VARCHAR}, 
      #{threadOsId,jdbcType=BIGINT}, #{processlistInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yan.crowdfunding.entity.Threads" >
    insert into threads
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="threadId != null" >
        THREAD_ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="processlistId != null" >
        PROCESSLIST_ID,
      </if>
      <if test="processlistUser != null" >
        PROCESSLIST_USER,
      </if>
      <if test="processlistHost != null" >
        PROCESSLIST_HOST,
      </if>
      <if test="processlistDb != null" >
        PROCESSLIST_DB,
      </if>
      <if test="processlistCommand != null" >
        PROCESSLIST_COMMAND,
      </if>
      <if test="processlistTime != null" >
        PROCESSLIST_TIME,
      </if>
      <if test="processlistState != null" >
        PROCESSLIST_STATE,
      </if>
      <if test="parentThreadId != null" >
        PARENT_THREAD_ID,
      </if>
      <if test="role != null" >
        ROLE,
      </if>
      <if test="instrumented != null" >
        INSTRUMENTED,
      </if>
      <if test="history != null" >
        HISTORY,
      </if>
      <if test="connectionType != null" >
        CONNECTION_TYPE,
      </if>
      <if test="threadOsId != null" >
        THREAD_OS_ID,
      </if>
      <if test="processlistInfo != null" >
        PROCESSLIST_INFO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="threadId != null" >
        #{threadId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="processlistId != null" >
        #{processlistId,jdbcType=BIGINT},
      </if>
      <if test="processlistUser != null" >
        #{processlistUser,jdbcType=VARCHAR},
      </if>
      <if test="processlistHost != null" >
        #{processlistHost,jdbcType=VARCHAR},
      </if>
      <if test="processlistDb != null" >
        #{processlistDb,jdbcType=VARCHAR},
      </if>
      <if test="processlistCommand != null" >
        #{processlistCommand,jdbcType=VARCHAR},
      </if>
      <if test="processlistTime != null" >
        #{processlistTime,jdbcType=BIGINT},
      </if>
      <if test="processlistState != null" >
        #{processlistState,jdbcType=VARCHAR},
      </if>
      <if test="parentThreadId != null" >
        #{parentThreadId,jdbcType=BIGINT},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="instrumented != null" >
        #{instrumented,jdbcType=CHAR},
      </if>
      <if test="history != null" >
        #{history,jdbcType=CHAR},
      </if>
      <if test="connectionType != null" >
        #{connectionType,jdbcType=VARCHAR},
      </if>
      <if test="threadOsId != null" >
        #{threadOsId,jdbcType=BIGINT},
      </if>
      <if test="processlistInfo != null" >
        #{processlistInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yan.crowdfunding.entity.ThreadsExample" resultType="java.lang.Integer" >
    select count(*) from threads
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update threads
    <set >
      <if test="record.threadId != null" >
        THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.processlistId != null" >
        PROCESSLIST_ID = #{record.processlistId,jdbcType=BIGINT},
      </if>
      <if test="record.processlistUser != null" >
        PROCESSLIST_USER = #{record.processlistUser,jdbcType=VARCHAR},
      </if>
      <if test="record.processlistHost != null" >
        PROCESSLIST_HOST = #{record.processlistHost,jdbcType=VARCHAR},
      </if>
      <if test="record.processlistDb != null" >
        PROCESSLIST_DB = #{record.processlistDb,jdbcType=VARCHAR},
      </if>
      <if test="record.processlistCommand != null" >
        PROCESSLIST_COMMAND = #{record.processlistCommand,jdbcType=VARCHAR},
      </if>
      <if test="record.processlistTime != null" >
        PROCESSLIST_TIME = #{record.processlistTime,jdbcType=BIGINT},
      </if>
      <if test="record.processlistState != null" >
        PROCESSLIST_STATE = #{record.processlistState,jdbcType=VARCHAR},
      </if>
      <if test="record.parentThreadId != null" >
        PARENT_THREAD_ID = #{record.parentThreadId,jdbcType=BIGINT},
      </if>
      <if test="record.role != null" >
        ROLE = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.instrumented != null" >
        INSTRUMENTED = #{record.instrumented,jdbcType=CHAR},
      </if>
      <if test="record.history != null" >
        HISTORY = #{record.history,jdbcType=CHAR},
      </if>
      <if test="record.connectionType != null" >
        CONNECTION_TYPE = #{record.connectionType,jdbcType=VARCHAR},
      </if>
      <if test="record.threadOsId != null" >
        THREAD_OS_ID = #{record.threadOsId,jdbcType=BIGINT},
      </if>
      <if test="record.processlistInfo != null" >
        PROCESSLIST_INFO = #{record.processlistInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update threads
    set THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      NAME = #{record.name,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      PROCESSLIST_ID = #{record.processlistId,jdbcType=BIGINT},
      PROCESSLIST_USER = #{record.processlistUser,jdbcType=VARCHAR},
      PROCESSLIST_HOST = #{record.processlistHost,jdbcType=VARCHAR},
      PROCESSLIST_DB = #{record.processlistDb,jdbcType=VARCHAR},
      PROCESSLIST_COMMAND = #{record.processlistCommand,jdbcType=VARCHAR},
      PROCESSLIST_TIME = #{record.processlistTime,jdbcType=BIGINT},
      PROCESSLIST_STATE = #{record.processlistState,jdbcType=VARCHAR},
      PARENT_THREAD_ID = #{record.parentThreadId,jdbcType=BIGINT},
      ROLE = #{record.role,jdbcType=VARCHAR},
      INSTRUMENTED = #{record.instrumented,jdbcType=CHAR},
      HISTORY = #{record.history,jdbcType=CHAR},
      CONNECTION_TYPE = #{record.connectionType,jdbcType=VARCHAR},
      THREAD_OS_ID = #{record.threadOsId,jdbcType=BIGINT},
      PROCESSLIST_INFO = #{record.processlistInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update threads
    set THREAD_ID = #{record.threadId,jdbcType=BIGINT},
      NAME = #{record.name,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      PROCESSLIST_ID = #{record.processlistId,jdbcType=BIGINT},
      PROCESSLIST_USER = #{record.processlistUser,jdbcType=VARCHAR},
      PROCESSLIST_HOST = #{record.processlistHost,jdbcType=VARCHAR},
      PROCESSLIST_DB = #{record.processlistDb,jdbcType=VARCHAR},
      PROCESSLIST_COMMAND = #{record.processlistCommand,jdbcType=VARCHAR},
      PROCESSLIST_TIME = #{record.processlistTime,jdbcType=BIGINT},
      PROCESSLIST_STATE = #{record.processlistState,jdbcType=VARCHAR},
      PARENT_THREAD_ID = #{record.parentThreadId,jdbcType=BIGINT},
      ROLE = #{record.role,jdbcType=VARCHAR},
      INSTRUMENTED = #{record.instrumented,jdbcType=CHAR},
      HISTORY = #{record.history,jdbcType=CHAR},
      CONNECTION_TYPE = #{record.connectionType,jdbcType=VARCHAR},
      THREAD_OS_ID = #{record.threadOsId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>